{"version":3,"sources":["components/DeleteData.js","components/ConfirmData.js","components/ModelData.js","components/ModelDatas.js","components/DetailSearch.js","components/CreateData.js","App.js","reportWebVitals.js","index.js"],"names":["DeleteData","props","useState","open","setOpen","data","handleClose","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","Typography","gutterBottom","DialogActions","e","preventDefault","onChangeData","id","useStyles","makeStyles","theme","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","independent","textAlign","dependent","input","margin","spacing","width","root","accordion","marginBottom","accoHeading","detail","display","alignItems","flexDirection","paper","overflowX","text","whiteSpace","padding","textOverflow","blue","background","ConfirmData","classes","tests","Array","from","length","rows","setRows","result","setResult","React","useEffect","a","fetch","sampleData","response","reader","body","getReader","read","decoder","TextDecoder","csv","decode","value","results","PaPa","parse","header","row","getData","deleted","isDeleted","deleted_date","texts","i","push","TextField","className","label","event","target","onChange","parseFloat","tableHead","cell","TableCell","tableBody","tableCells","TableRow","name","language","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","Paper","type","loss_type","loss","accuracy","date_create","date_modify","Table","TableHead","TableBody","href","dataSource","rel","code","model_json","temp","tf","then","model","predict","arraySync","toFixed","concat","document","getElementById","unstable_createMuiStrictModeTheme","tableCell_low","breakpoints","down","tableCell_medium","tableCell_high","ModelData","button","ThemeProvider","overflow","ModelDatas","dataType","setDataType","sortType","setSortType","changeSortType","onChangeSortType","ChangeData","lists","datas","table","marginLeft","menu","langs","modelTypes","DetailSearch","setName","setLossType","setDateCreate","setDateModify","lang","setLang","modelType","setModelType","handleClickOpen","trigger","ListItem","ListItemText","primary","select","map","option","MenuItem","onChangeSearchKeyword","word","marginTop","CreateData","setId","setType","setLoss","setAccuracy","setLanguage","setCode","setDataSource","desc","setDesc","data_link","setDataLink","setModelJson","setIndependent","setDependent","sampledata","setSampledata","currentTime","now","Date","year","String","getFullYear","month","getMonth","date","getDate","isNaN","split","newData","onCreateData","theme_preventerror","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","menuButton","marginRight","title","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","up","searchIcon","height","pointerEvents","justifyContent","inputRoot","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","inputInput","paddingLeft","drawerMenu","drawerSubMenu","marginleft","upBotton","bottom","right","menu_small_none","menu_small_none_button","menu_small_block","menu_medium_none","menu_medium_block","ScrollTop","children","window","useScrollTrigger","undefined","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","querySelector","scrollIntoView","behavior","block","role","App","useTheme","searchKeyword","setSearchKeyword","arrayDatas","setDatas","menu_type","setMenuType","searchType","setSearchType","mobileOpen","setMobileOpen","container","handleDrawerToggle","handleSaveFile","newDatas","_","orderBy","fileData","JSON","stringify","replace","blob","Blob","url","URL","createObjectURL","link","createElement","download","click","Box","component","AppBar","Toolbar","IconButton","aria-label","edge","noWrap","InputBase","placeholder","inputProps","Hidden","smUp","implementation","Drawer","direction","ModalProps","keepMounted","Divider","List","index","onChangeType","conponent","filter","c","indexOf","NaN","Fab","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.054409ff.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// material-ui/core에서 import\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst DeleteData = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data] = useState(props.data);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const deleteData = (e) => {\r\n        e.preventDefault();\r\n        props.onChangeData(data.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>삭제</Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle onClose={handleClose}>삭제 경고</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography gutterBottom>선택한 데이터가 삭제됩니다.</Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={deleteData}>삭제</Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteData;","import React, { useState } from \"react\";\r\n\r\n// 기타 기능을 위한 import\r\nimport PaPa from \"papaparse\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n\r\n// material-ui/core에서 import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// material-ui/icons에서 import\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    independent: {\r\n        textAlign: \"left\"\r\n    },\r\n    dependent: {\r\n        textAlign: \"right\"\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n        width: '40%',\r\n    },\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    accordion: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    accoHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    detail: {\r\n        display: \"flex\",\r\n        alignItems : \"flex-start\",\r\n        flexDirection : \"column\"\r\n    },\r\n    paper: {\r\n        width: \"100%\",\r\n        overflowX: \"auto\",\r\n        \r\n    },\r\n    text: {\r\n        width: \"100%\",\r\n        overflowX: \"auto\",\r\n        whiteSpace: \"nowrap\",\r\n        padding: theme.spacing(0.5),\r\n        textOverflow: \"ellipsis\"\r\n    },\r\n    blue: {\r\n        background: \"#3f51b5\",\r\n        color: \"white\"\r\n    },\r\n}))\r\n\r\nconst ConfirmData = (props) => {\r\n    const classes = useStyles();\r\n    const [data] = useState(props.data);\r\n    const [open, setOpen] = useState(false);\r\n    var tests = Array.from({length: data.independent.length}, () => 0);\r\n    const [rows, setRows] = useState([]);\r\n    const [result, setResult] = useState([]);\r\n    \r\n    React.useEffect(() => {\r\n        async function getData() {\r\n            const response = await fetch(data.sampleData);\r\n            const reader = response.body.getReader();\r\n            const result = await reader.read();\r\n            const decoder = new TextDecoder(\"utf-8\");\r\n            const csv = decoder.decode(result.value);\r\n            const results = PaPa.parse(csv, {header: false});\r\n            const row = results.data;\r\n            setRows(row)\r\n        }\r\n        if (data.sampleData !== \"\"){\r\n            getData()\r\n        }\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    } \r\n\r\n    const handleChange = (e, id) => {\r\n        tests[id] = parseFloat(e.target.value);\r\n    }\r\n\r\n    const openData = () => {\r\n\r\n        if(data.model_json !== \"\") {\r\n            let temp = [];\r\n            for (let i in tests){\r\n                temp.push(<TableCell key={\"result\"+temp.length}>{tests[i]}</TableCell>)\r\n            }\r\n            tf.loadLayersModel(data.model_json).then(function(model){\r\n                let predict =  model.predict(tf.tensor(tests, [1,data.independent.length]))\r\n                for (let i in predict.arraySync()[0]){\r\n                    temp.push(<TableCell key={\"result\"+temp.length}>{predict.arraySync()[0][i].toFixed(2)}</TableCell>);\r\n                }\r\n                setResult(result.concat(<TableRow key={\"result\"+result.length}>{temp}</TableRow>))\r\n            })\r\n        }\r\n\r\n        for (let i in data.independent){\r\n            document.getElementById(data.independent[i]).value = null;\r\n        }\r\n\r\n    }\r\n\r\n    let deleted = null;\r\n    if(data.isDeleted === true) {\r\n        deleted = <Typography variant=\"body2\">삭제된 데이터입니다. 삭제 날짜: {data.deleted_date}</Typography>\r\n    }\r\n\r\n    var texts = []; \r\n    for (let i in data.independent){\r\n        texts.push(<TextField key={i} className={classes.input} id={data.independent[i]} label={data.independent[i]} variant=\"outlined\" onClick={(event) => {event.target.value = null}} onChange={(event) => handleChange(event, i)}/>)\r\n    }\r\n    \r\n    let tableHead = [];\r\n    for (let cell in data.independent){\r\n        tableHead.push(<TableCell key={\"head\"+cell}>{data.independent[cell]}</TableCell>)\r\n    }\r\n    \r\n    for (let cell in data.dependent){\r\n        tableHead.push(<TableCell key={\"head\"+cell+data.independent.length} >{data.dependent[cell]}</TableCell>)\r\n    }\r\n    \r\n    let tableBody = [];\r\n    for (let row in rows){\r\n        let tableCells = []\r\n        for (let cell in rows[row]){\r\n            tableCells.push(<TableCell key={\"body\"+cell} >{rows[row][cell]}</TableCell>)\r\n        }\r\n        tableBody.push(<TableRow key={row}>{tableCells}</TableRow>)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>확인</Button>\r\n            <Dialog className={classes.root} open={open} onClose={handleClose} color=\"primary\">\r\n                <DialogTitle className={classes.blue} onClose={handleClose}>{data.name} by {data.language}</DialogTitle>\r\n                <DialogContent>\r\n                    <Accordion className={classes.accordion}>\r\n                        <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                        >\r\n                            <Typography className={classes.accoHeading}>모델 정보 확인</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={classes.detail}>\r\n                            <Paper className={classes.text}>\r\n                                {deleted}\r\n                                <Typography variant=\"body2\">분석 타입: {data.type}</Typography>\r\n                                <Typography variant=\"body2\">loss 형식: {data.loss_type}</Typography>\r\n                                <Typography variant=\"body2\">loss: {data.loss}</Typography>\r\n                                <Typography variant=\"body2\">accuracy: {data.accuracy}</Typography>\r\n                                <Typography variant=\"body2\">생성 날짜: {data.date_create}</Typography>\r\n                                <Typography variant=\"body2\">수정 날짜: {data.date_modify}</Typography>\r\n                            </Paper>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    \r\n                    <Accordion className={classes.accordion}>\r\n                        <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                        >\r\n                            <Typography className={classes.accoHeading}>샘플 데이터로 모델 확인</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={classes.detail}>\r\n                            <Paper className={classes.paper}>\r\n                                {rows? <Table><TableHead><TableRow>{tableHead}</TableRow></TableHead><TableBody>{tableBody}</TableBody></Table> : \"\"}\r\n                            </Paper>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                \r\n                    <Accordion className={classes.accordion}>\r\n                        <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                        >\r\n                            <Typography className={classes.accoHeading}>모델로 테스트하기</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={classes.detail}>\r\n                            <Typography variant=\"h6\">데이터 입력</Typography>\r\n                            <Paper className={classes.paper}>{texts}</Paper>\r\n                            <Paper className={classes.paper}>\r\n                                <Table><TableHead><TableRow>{tableHead}</TableRow></TableHead><TableBody>{result}</TableBody></Table>\r\n                            </Paper>\r\n\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                \r\n                    <Accordion className={classes.accordion}>\r\n                        <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                        >\r\n                            <Typography className={classes.accoHeading}>출처</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={classes.detail}>\r\n                            <Paper className={classes.text}>\r\n                                <Typography variant=\"body2\">데이터 출처: <a href={data.dataSource} target=\"_blank\" rel=\"noreferrer\">{data.dataSource}</a></Typography>\r\n                                <Typography variant=\"body2\">데이터 링크: <a href={data.data} target=\"_blank\" rel=\"noreferrer\">{data.data}</a></Typography>\r\n                                <Typography variant=\"body2\">코드 링크: <a href={data.code} target=\"_blank\" rel=\"noreferrer\">{data.code}</a></Typography>\r\n                            </Paper>\r\n\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={openData}>테스트</Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmData;","import React, { useState } from \"react\";\r\n\r\n// 컴포넌트 import\r\nimport DeleteData from \"./DeleteData\";\r\nimport ConfirmData from \"./ConfirmData\";\r\n\r\n// material-ui/core에서 import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { unstable_createMuiStrictModeTheme } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst theme = unstable_createMuiStrictModeTheme();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tableCell_low: {\r\n      [theme.breakpoints.down('xs')]: {\r\n        display: \"none\"\r\n      },\r\n    },\r\n    tableCell_medium: {\r\n      [theme.breakpoints.down('sm')]: {\r\n        display: \"none\"\r\n      },\r\n    },\r\n    tableCell_high: {\r\n      [theme.breakpoints.down('md')]: {\r\n        display: \"none\"\r\n      },\r\n    },\r\n}));\r\n\r\nconst ModelData = (props) => {\r\n    const classes = useStyles();\r\n    const [data] = useState(props.data);\r\n\r\n    const deleteData = (id) => {\r\n        props.onChangeData(id)\r\n    }\r\n\r\n    const restoreData = (e) => {\r\n        e.preventDefault();\r\n        props.onChangeData(data.id)\r\n    }\r\n\r\n    var button = null;\r\n\r\n    if (data.isDeleted === false){\r\n        button = <ThemeProvider theme={theme}>\r\n                    <DeleteData data={data} onChangeData={deleteData}/>\r\n                    </ThemeProvider>;\r\n    } else {\r\n        button = <Button variant=\"contained\" color=\"secondary\" onClick={restoreData}>복원</Button>;\r\n    }\r\n\r\n    return(\r\n        \r\n            <TableRow>\r\n                <TableCell>{data.name}</TableCell>\r\n                <TableCell className={classes.tableCell_low}>{data.type}</TableCell>\r\n                <TableCell className={classes.tableCell_medium}>{data.loss_type}</TableCell>\r\n                <TableCell className={classes.tableCell_low}>{data.loss}</TableCell>\r\n                <TableCell className={classes.tableCell_medium}>{data.accuracy}</TableCell>\r\n                <TableCell className={classes.tableCell_medium}>{data.language}</TableCell>\r\n                <TableCell className={classes.tableCell_high}>{data.date_create}</TableCell>\r\n                <TableCell className={classes.tableCell_high}>{data.date_modify}</TableCell>\r\n                <TableCell>\r\n                    <ThemeProvider theme={theme}>\r\n                        <ConfirmData data={data}></ConfirmData>\r\n                    </ThemeProvider>\r\n                </TableCell>\r\n                <TableCell>\r\n                    {button}\r\n                </TableCell>\r\n            </TableRow>\r\n    );\r\n}\r\n\r\nexport default ModelData;","import React, {useState} from \"react\";\r\n\r\n// 컴포넌트 import\r\nimport ModelData from \"./ModelData\";\r\n\r\n// material-ui/core에서 import\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"100%\",\r\n      overflow: \"auto\"\r\n    },\r\n    tableHead: {\r\n      fontSize: \"1.0rem\",\r\n    },\r\n    tableCell_low: {\r\n      [theme.breakpoints.down('xs')]: {\r\n        display: \"none\"\r\n      },\r\n    },\r\n    tableCell_medium: {\r\n      [theme.breakpoints.down('sm')]: {\r\n        display: \"none\"\r\n      },\r\n    },\r\n    tableCell_high: {\r\n      [theme.breakpoints.down('md')]: {\r\n        display: \"none\"\r\n      },\r\n    },\r\n}));\r\n\r\nconst ModelDatas = (props) => {\r\n\r\n    const [dataType, setDataType] = useState(\"id\");\r\n    const [sortType, setSortType] = useState(true);\r\n    const classes = useStyles();\r\n\r\n    const changeSortType = (event, type) => {\r\n        event.preventDefault();\r\n        if (dataType === type) {\r\n            setSortType(!sortType);\r\n        } else {\r\n            setDataType(type);\r\n            setSortType(true);\r\n        }\r\n        props.onChangeSortType(dataType, sortType);\r\n    }\r\n\r\n    const ChangeData = (e) => {\r\n        props.onChangeData(e);\r\n    }\r\n\r\n    var lists = [];\r\n    for (var i in props.datas){\r\n      lists.push(<ModelData key={props.datas[i].id} data={props.datas[i]} onChangeData={ChangeData}></ModelData>)\r\n    }\r\n    \r\n    return(\r\n        <Paper className={classes.root}>\r\n          <Table className={classes.table}>\r\n            <TableHead className={classes.TableHead}>\r\n              <TableRow>\r\n                <TableCell><Button onClick={(event) => changeSortType(event, \"name\")}>이름</Button></TableCell>\r\n                <TableCell className={classes.tableCell_low}><Button onClick={(event) => changeSortType(event, \"type\")}>회귀/분류</Button></TableCell>\r\n                <TableCell className={classes.tableCell_medium}><Button onClick={(event) => changeSortType(event, \"loss_type\")}>loss 종류</Button></TableCell>\r\n                <TableCell className={classes.tableCell_low}><Button onClick={(event) => changeSortType(event, \"loss\")}>loss</Button></TableCell>\r\n                <TableCell className={classes.tableCell_medium}><Button onClick={(event) => changeSortType(event, \"accuracy\")}>정확도</Button></TableCell>\r\n                <TableCell className={classes.tableCell_medium}><Button onClick={(event) => changeSortType(event, \"language\")}>언어 종류</Button></TableCell>\r\n                <TableCell className={classes.tableCell_high}><Button onClick={(event) => changeSortType(event, \"date_create\")}>생성 날짜</Button></TableCell>\r\n                <TableCell className={classes.tableCell_high}><Button onClick={(event) => changeSortType(event, \"date_modify\")}>수정 날짜</Button></TableCell>\r\n                <TableCell>확인</TableCell>\r\n                <TableCell>삭제</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {lists}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default ModelDatas;","import React, {useState} from \"react\";\r\n\r\n// material-ui/core에서 import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginLeft: 10\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n    menu: {\r\n        marginLeft: 50\r\n    }\r\n}))\r\n\r\nconst langs = [\"\", \"파이썬\", \"자바스크립트\"];\r\nconst modelTypes = [\"\", \"회귀\", \"분류\"];\r\n\r\nconst DetailSearch = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [loss_type, setLossType] = useState(\"\");\r\n    const [date_create, setDateCreate] = useState(\"\");\r\n    const [date_modify, setDateModify] = useState(\"\");\r\n    const [lang, setLang] = useState(\"\");\r\n    const [modelType, setModelType] = useState(\"\");\r\n    const classes = useStyles();\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    } \r\n\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    const handleLossType = (event) => {\r\n        setLossType(event.target.value);\r\n    }\r\n\r\n    const handleDateCreate = (event) => {\r\n        setDateCreate(event.target.value);\r\n    }\r\n\r\n    const handleDateModify = (event) => {\r\n        setDateModify(event.target.value);\r\n    }\r\n\r\n    const handleLangChange = (event) => {\r\n        setLang(event.target.value);\r\n    }\r\n\r\n    const handleModelTypeChange = (event) => {\r\n        setModelType(event.target.value);\r\n    }\r\n\r\n    const onSendSearchKeyword = (event) => {\r\n        setOpen(false);\r\n        props.onChangeSearchKeyword({name: name, type: modelType, loss_type: loss_type, language: lang, date_create: date_create, date_modify: date_modify});\r\n    }\r\n    let trigger = null;\r\n    let temp = props.trigger;\r\n    if (temp === \"Appbar\") {\r\n        trigger = <Button variant=\"contained\" onClick={handleClickOpen} className={classes.root}>상세검색</Button>;\r\n    } else {\r\n        trigger = <ListItem button key=\"상세검색\" onClick={handleClickOpen}><ListItemText primary=\"상세검색\" className={classes.menu}/></ListItem>;\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            {trigger}\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle onClose={handleClose}>상세 검색</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField className={classes.input} id=\"name\" label=\"이름\" variant=\"outlined\" onChange={handleName}/>\r\n                    <TextField\r\n                        className={classes.input}\r\n                        id=\"type\"\r\n                        select\r\n                        label=\"회귀/분류\"\r\n                        value={modelType}\r\n                        onChange={handleModelTypeChange}\r\n                        variant=\"outlined\"\r\n                        >\r\n                        {modelTypes.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField className={classes.input} id=\"loss_type\" label=\"Loss 종류\" variant=\"outlined\" onChange={handleLossType}/>\r\n                    <TextField\r\n                        className={classes.input}\r\n                        id=\"language\"\r\n                        select\r\n                        label=\"언어 종류\"\r\n                        value={lang}\r\n                        onChange={handleLangChange}\r\n                        variant=\"outlined\"\r\n                        >\r\n                        {langs.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField className={classes.input} id=\"date_create\" label=\"생성 날짜\" variant=\"outlined\" onChange={handleDateCreate}/>\r\n                    <TextField className={classes.input} id=\"date_modify\" label=\"수정 날짜\" variant=\"outlined\" onChange={handleDateModify}/>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSendSearchKeyword}>검색</Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailSearch;","import React, { useState } from \"react\";\r\n\r\n// material-ui/core에서 import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginLeft: 10\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n        width: '40%',\r\n    },\r\n    word: {\r\n        marginTop: 10\r\n    },\r\n    menu: {\r\n        marginLeft: 50\r\n    }\r\n}))\r\n\r\nconst CreateData = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [data] = useState(props.data);\r\n    const [id, setId] = useState(data.length);\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"회귀\");\r\n    const [loss_type, setLossType] = useState(\"\");\r\n    const [loss, setLoss] = useState(0);\r\n    const [accuracy, setAccuracy] = useState(0);\r\n    const [language, setLanguage] = useState(\"파이썬\");\r\n    const [code, setCode] = useState(\"\");\r\n    const [dataSource, setDataSource] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [data_link, setDataLink] = useState(\"\");\r\n    const [model_json, setModelJson] = useState(\"\");\r\n    const [independent, setIndependent] = useState([]);\r\n    const [dependent, setDependent] = useState([]);\r\n    const [sampledata, setSampledata] = useState(\"\");\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const currentTime = () => {\r\n        let now = new Date();\r\n        let year = String(now.getFullYear());\r\n        let month = String(now.getMonth() + 1);\r\n        if (month.length === 1) {\r\n          month = \"0\"+month;\r\n        }\r\n        let date = String(now.getDate());\r\n        if (date.length === 1) {\r\n            date = \"0\"+date;\r\n        }\r\n        return year+month+date;\r\n    }\r\n\r\n    const handleDataChange = () => {\r\n        const newData = {\r\n            id: id,\r\n            name: name,\r\n            type: type,\r\n            loss_type: loss_type,\r\n            loss: loss,\r\n            accuracy: accuracy,\r\n            language: language,\r\n            date_create: currentTime(),\r\n            date_modify: currentTime(),\r\n            isDeleted: false,\r\n            deleted_date: 0,\r\n            code: code,\r\n            dataSource: dataSource,\r\n            desc: desc,\r\n            data: data_link,\r\n            model_json: model_json,\r\n            independent: independent,\r\n            dependent: dependent,\r\n            sampledata: sampledata\r\n        };\r\n        setId(id+1);\r\n        props.onCreateData(newData);\r\n        handleClose();\r\n    }\r\n\r\n    let trigger = null;\r\n    let temp = props.trigger;\r\n    if (temp === \"Appbar\") {\r\n        trigger = <Button variant=\"contained\" onClick={handleClickOpen} className={classes.root}>추가</Button>;\r\n    } else {\r\n        trigger = <ListItem button key=\"추가\" onClick={handleClickOpen}><ListItemText primary=\"추가\" className={classes.menu}/></ListItem>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {trigger}\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle onClose={handleClose}>데이터 추가</DialogTitle>\r\n                <DialogContent>\r\n                    <Paper>\r\n                        <TextField className={classes.input} label=\"이름\" variant=\"outlined\" onChange={(event) => setName(event.target.value)}/>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            select\r\n                            label=\"회귀/분류\"\r\n                            value={type}\r\n                            onChange={(event) => setType(event.target.value)}\r\n                            variant=\"outlined\"\r\n                            >\r\n                            <MenuItem key=\"regression\" value=\"회귀\">회귀</MenuItem>\r\n                            <MenuItem key=\"classification\" value=\"분류\">분류</MenuItem>\r\n                        </TextField>\r\n                        <TextField className={classes.input} label=\"loss 종류\" variant=\"outlined\" onChange={(event) => setLossType(event.target.value)}/>\r\n                        <TextField className={classes.input} label=\"loss\" variant=\"outlined\" onChange={(event) => setLoss(isNaN(parseFloat(event.target.value))? 0 : event.target.value)}/>\r\n                        <TextField className={classes.input} label=\"정확도\" variant=\"outlined\" onChange={(event) => setAccuracy(isNaN(parseFloat(event.target.value))? 0 : event.target.value)}/>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            select\r\n                            label=\"언어 종류\"\r\n                            value={language}\r\n                            onChange={(event) => setLanguage(event.target.value)}\r\n                            variant=\"outlined\"\r\n                            >\r\n                            <MenuItem key=\"python\" value=\"파이썬\">파이썬</MenuItem>\r\n                            <MenuItem key=\"javascript\" value=\"자바스크립트\">자바스크립트</MenuItem>\r\n                        </TextField>\r\n                        <TextField className={classes.input} label=\"코드 링크\" variant=\"outlined\" onChange={(event) => setCode(event.target.value)}/>\r\n                        <TextField className={classes.input} label=\"데이터 출처\" variant=\"outlined\" onChange={(event) => setDataSource(event.target.value)}/>\r\n                        <TextField className={classes.input} label=\"설명\" variant=\"outlined\" onChange={(event) => setDesc(event.target.value)}/>\r\n                        <TextField className={classes.input} label=\"데이터 링크\" variant=\"outlined\" onChange={(event) => setDataLink(event.target.value)}/>\r\n                        <TextField className={classes.input} label=\"모델 링크\" variant=\"outlined\" onChange={(event) => setModelJson(event.target.value)}/>\r\n                        <TextField className={classes.input} label=\"독립 변수\" variant=\"outlined\" onChange={(event) => setIndependent(event.target.value.split(\" \"))}/>\r\n                        <TextField className={classes.input} label=\"종속 변수\" variant=\"outlined\" onChange={(event) => setDependent(event.target.value.split(\" \"))}/>\r\n                        <TextField className={classes.input} label=\"샘플 데이터 링크\" variant=\"outlined\" onChange={(event) => setSampledata(event.target.value)}/>\r\n                    </Paper>\r\n                    <Typography className={classes.word}>독립 변수와 종속 변수는 빈칸을 통해 구분하십시오.</Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleDataChange}>추가</Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateData;","import React, { useState } from \"react\";\r\n\r\n// 기타 기능을 위한 import\r\nimport PropTypes from 'prop-types';\r\nimport _ from \"lodash\";\r\n\r\n// 컴포넌트와 데이터 import\r\nimport arrayDatas from \"./mainData.json\"\r\nimport ModelDatas from \"./components/ModelDatas\";\r\nimport DetailSearch from \"./components/DetailSearch\";\r\nimport CreateData from \"./components/CreateData\";\r\n\r\n// material-ui/core에서 import\r\nimport { makeStyles, useTheme, fade } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { unstable_createMuiStrictModeTheme } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\n// material-ui/icons에서 import\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme_preventerror = unstable_createMuiStrictModeTheme();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },  \r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    \r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },    \r\n        },\r\n    },\r\n    \r\n    drawerMenu: {\r\n        marginLeft: 20\r\n    },\r\n    \r\n    drawerSubMenu: {\r\n        marginLeft: 50\r\n    },\r\n\r\n    marginleft: {\r\n        marginLeft: 10\r\n    },\r\n    upBotton: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n\r\n    menu_small_none: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: \"none\"\r\n        },\r\n    },\r\n    menu_small_none_button: {\r\n        marginLeft: 10,\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: \"none\"\r\n        },\r\n    },\r\n    menu_small_block: {\r\n        display: \"none\",\r\n        marginLeft: 50,\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: \"block\"\r\n        },\r\n    },\r\n    menu_medium_none: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: \"none\"\r\n        },\r\n    },\r\n    menu_medium_block: {\r\n        display: \"none\",\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: \"block\"\r\n        },\r\n    },\r\n}));\r\n\r\nfunction ScrollTop(props) {\r\n    const { children, window } = props;\r\n    const classes = useStyles();\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n  \r\n    const handleClick = (event) => {\r\n        const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n  \r\n        if (anchor) {\r\n            anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        }\r\n    };\r\n  \r\n    return (\r\n        <Zoom in={trigger}>\r\n            <div onClick={handleClick} role=\"presentation\" className={classes.upBotton}>\r\n            {children}\r\n            </div>\r\n        </Zoom>\r\n    );\r\n}\r\n  \r\nScrollTop.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    window: PropTypes.func,\r\n};\r\n\r\nconst App = (props) => {\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [searchKeyword, setSearchKeyword] = useState({\r\n        name: \"\",\r\n        type: \"\",\r\n        loss_type: \"\",\r\n        language: \"\",\r\n        date_create: \"\",\r\n        date_modify: \"\"\r\n    });\r\n    const [datas, setDatas] = useState(arrayDatas);\r\n    const [menu_type, setMenuType] = useState(\"data\");\r\n    const [searchType, setSearchType] = useState(\"name\");\r\n    const [mobileOpen, setMobileOpen] = useState(false);\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const handleSearchKeywordNameChange = (e) => {\r\n        setSearchKeyword({name: e.target.value, type: \"\", loss_type: \"\", language: \"\", date_create: \"\", date_modify: \"\"});\r\n        setSearchType(\"name\");\r\n    }\r\n\r\n    const onChangeSearchKeyword = (e) => {\r\n        setSearchKeyword(e);\r\n        setSearchType(\"all\");\r\n    }\r\n    \r\n    const currentTime = () => {\r\n        let now = new Date();\r\n        let year = String(now.getFullYear());\r\n        let month = String(now.getMonth() + 1);\r\n        if (month.length === 1) {\r\n            month = \"0\"+month;\r\n        }\r\n        let date = String(now.getDate());\r\n        if (date.length === 1) {\r\n            date = \"0\"+date;\r\n        }\r\n        return year+month+date;\r\n    }\r\n    \r\n    const onChangeData = (e) => {\r\n        let newDatas = Array.from(datas);\r\n        for (let i in datas){\r\n            if (newDatas[i].id === e){\r\n                if (newDatas[i].isDeleted === false) {\r\n                    newDatas[i].isDeleted = true;\r\n                    newDatas[i].deleted_date = currentTime();\r\n                } else {\r\n                    newDatas[i].isDeleted = false;\r\n                    newDatas[i].deleted_date = NaN;\r\n                }\r\n                setDatas(newDatas);\r\n            }\r\n        }\r\n    }\r\n    \r\n    const filteredComponents = (data) => {\r\n        if( menu_type === \"data\"){\r\n            data = data.filter((c) => {\r\n                return c.isDeleted === false;\r\n            })\r\n        } else if (menu_type === \"removed\"){\r\n            data = data.filter((c) => {\r\n                return c.isDeleted === true;\r\n            })\r\n        }\r\n        if (searchType === \"name\") {\r\n            data = data.filter((c) => {\r\n                return c.name.indexOf(searchKeyword.name) > -1;\r\n            })\r\n        }\r\n        else {\r\n            data = data.filter((c) => {\r\n                return c.name.indexOf(searchKeyword.name) > -1;\r\n            })\r\n            data = data.filter((c) => {\r\n                return c.type.indexOf(searchKeyword.type) > -1;\r\n            })\r\n            data = data.filter((c) => {\r\n                return c.loss_type.indexOf(searchKeyword.loss_type) > -1;\r\n            })\r\n            data = data.filter((c) => {\r\n                return c.language.indexOf(searchKeyword.language) > -1;\r\n            })  \r\n            data = data.filter((c) => {\r\n                return c.date_create.indexOf(searchKeyword.date_create) > -1;\r\n            })\r\n            data = data.filter((c) => {\r\n                return c.date_modify.indexOf(searchKeyword.date_modify) > -1;\r\n            })\r\n        }\r\n        \r\n        return data;\r\n    }\r\n    \r\n    const onChangeType = (e, index) => {\r\n        let menu_type_list = [\"all\", \"data\", \"removed\"];\r\n        setMenuType(menu_type_list[index]);\r\n    }\r\n\r\n    const onChangeSort = (dataType, sortType) => {\r\n        let newDatas = Array.from(datas);\r\n        if (sortType){\r\n            newDatas = _.orderBy(newDatas, [dataType], [\"asc\"])\r\n        } else {\r\n            newDatas = _.orderBy(newDatas, [dataType], [\"desc\"])\r\n        }\r\n        setDatas(newDatas);\r\n    }\r\n    \r\n    const handleSaveFile = () => {\r\n        let newDatas = Array.from(datas);\r\n        newDatas = _.orderBy(newDatas, [\"id\"], [\"asc\"]);\r\n        let fileData = JSON.stringify(newDatas);\r\n        fileData = fileData.replace(/},/gi, \"},\\n\");\r\n        const blob = new Blob([fileData], {type: \"text/plain\"});\r\n        const url = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.download = 'mainData.json';\r\n        link.href = url;\r\n        link.click();\r\n    }\r\n    \r\n    const onCreateData = (newData) => {\r\n        setDatas(datas.concat(newData));\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            {/* AppBar */}\r\n            <Box component=\"div\" className={classes.appBar}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar id=\"back-to-top-anchor\">\r\n\r\n                        <Box component=\"div\" className={classes.menuButton}>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={handleDrawerToggle}\r\n                                edge=\"start\"\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                        </Box>\r\n\r\n                        <Box component=\"div\" className={classes.title} >\r\n                            <Typography variant=\"h6\" noWrap>머신 러닝 데이터 분석 관리</Typography>\r\n                        </Box>\r\n\r\n                        <Box component=\"div\" className={classes.search}>\r\n                            <div>\r\n                                <div className={classes.searchIcon}><SearchIcon/></div>\r\n                                <InputBase\r\n                                    placeholder=\"검색하기\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    name=\"searchKeyword\"\r\n                                    value={searchKeyword.name}\r\n                                    onChange={handleSearchKeywordNameChange}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                />\r\n                            </div>\r\n                        </Box>\r\n\r\n                        <Box component=\"div\" className={classes.menu_medium_none}>\r\n                            <ThemeProvider theme={theme_preventerror}>\r\n                                <DetailSearch trigger=\"Appbar\" onChangeSearchKeyword={onChangeSearchKeyword}></DetailSearch>\r\n                            </ThemeProvider>\r\n                        </Box>\r\n                    \r\n                        <Box component=\"div\" className={classes.menu_medium_none}>\r\n                            <ThemeProvider theme={theme_preventerror}>\r\n                                <CreateData trigger=\"Appbar\" onCreateData={onCreateData} data={datas}></CreateData>\r\n                            </ThemeProvider>\r\n                        </Box>\r\n\r\n                        <Box component=\"div\" className={classes.menu_small_none_button}>\r\n                            <Button variant=\"contained\" onClick={handleSaveFile}>저장</Button>\r\n                        </Box>\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n          </Box>\r\n\r\n            {/* Drawer */}\r\n            <Hidden smUp implementation=\"css\">\r\n                <Drawer\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                    open={mobileOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    ModalProps={{\r\n                        keepMounted: true, \r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={handleDrawerToggle}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItemText primary=\"보기\" className={classes.drawerMenu}/>\r\n                        <List>\r\n                            {['전체보기', '데이터 확인', '휴지통'].map((text, index) => (\r\n                                <ListItem button key={text}>\r\n                                    <ListItemText primary={text} className={classes.drawerSubMenu} onClick={(event) => onChangeType(event, index)}/>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </List>\r\n                    <Divider />\r\n\r\n                    <List className={classes.menu_medium_block}>\r\n                        <ListItemText primary=\"기타\" className={classes.drawerMenu}/>\r\n                        <ThemeProvider theme={theme_preventerror}>\r\n                            <List>\r\n                                <DetailSearch trigger=\"drawer\" onChangeSearchKeyword={onChangeSearchKeyword}></DetailSearch>\r\n                                <CreateData trigger=\"drawer\" onCreateData={onCreateData} data={datas}></CreateData>\r\n                                <ListItem button key=\"저장\" onClick={handleSaveFile}>\r\n                                    <ListItemText primary=\"저장\" className={classes.menu_small_block}/>\r\n                                </ListItem>\r\n                            </List>\r\n                        </ThemeProvider>\r\n                    </List>\r\n                    <Divider className={classes.menu_medium_block}/>\r\n                </Drawer>\r\n            </Hidden>\r\n\r\n            {/* Main Table */}\r\n            <Box\r\n                conponent=\"div\"\r\n                className={classes.content}>\r\n                <div className={classes.drawerHeader} />\r\n                <ModelDatas\r\n                    datas={filteredComponents(datas)}\r\n                    searchKeyword={searchKeyword}\r\n                    onChangeData={onChangeData}\r\n                    onChangeSortType={onChangeSort}>\r\n                </ModelDatas>\r\n            </Box >\r\n\r\n            {/* go to top botton */}\r\n            <ThemeProvider theme={theme_preventerror}>\r\n                <ScrollTop {...props}>\r\n                    <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n                        <KeyboardArrowUpIcon />\r\n                    </Fab>\r\n                </ScrollTop>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}