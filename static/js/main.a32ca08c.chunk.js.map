{"version":3,"sources":["components/DeleteData.js","components/ModelData.js","components/ModelDatas.js","components/DetailSearch.js","App.js","reportWebVitals.js","index.js"],"names":["DeleteData","props","useState","open","setOpen","data","handleClose","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","Typography","gutterBottom","DialogActions","e","preventDefault","onChangeData","id","theme","unstable_createMuiStrictModeTheme","ModelData","rows","setRows","setCode","React","useEffect","a","fetch","response","reader","body","getReader","read","result","decoder","TextDecoder","csv","decode","value","results","Papa","parse","header","code","getData","getCode","button","isDeleted","ThemeProvider","TableRow","TableCell","name","type","loss_type","loss","accuracy","language","date_create","date_modify","test","i","push_data","j","independent","push","parseFloat","model_json","tf","then","model","show","predict","arraySync","dependent","unshift","print","useStyles","makeStyles","root","margin","spacing","paper","marginLeft","marginRight","table","minwidth","tableHead","fontSize","ModelDatas","dataType","setDataType","sortType","setSortType","changeSortType","event","onChangeSortType","ChangeData","classes","lists","datas","className","Paper","Table","TableHead","TableBody","input","width","langs","modelTypes","DetailSearch","setName","setLossType","setDateCreate","setDateModify","lang","setLang","modelType","setModelType","TextField","label","onChange","target","select","map","option","MenuItem","onChangeSearchKeyword","drawerWidth","theme_preventerror","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","display","title","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","inputInput","paddingLeft","drawerMenu","drawerSubMenu","marginleft","App","useTheme","searchKeyword","setSearchKeyword","arrayDatas","setDatas","menu_type","setMenuType","searchType","setSearchType","currentTime","now","Date","year","String","getFullYear","month","getMonth","length","getDate","AppBar","clsx","Toolbar","IconButton","aria-label","edge","noWrap","InputBase","placeholder","inputProps","newDatas","Array","from","_","orderBy","fileData","JSON","stringify","blob","Blob","url","URL","createObjectURL","link","document","createElement","download","href","click","Drawer","anchor","direction","Divider","List","ListItemText","primary","text","index","ListItem","onChangeType","filter","c","indexOf","deleted_date","NaN","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a32ca08c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst DeleteData = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data] = useState(props.data);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const deleteData = (e) => {\r\n        e.preventDefault();\r\n        props.onChangeData(data.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>삭제</Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle onClose={handleClose}>삭제 경고</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography gutterBottom>선택한 데이터가 삭제됩니다.</Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={deleteData}>삭제</Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteData;","import React, { useState } from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteData from \"./DeleteData\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { unstable_createMuiStrictModeTheme } from \"@material-ui/core/styles\";\r\n\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport Papa from \"papaparse\";\r\n\r\nconst theme = unstable_createMuiStrictModeTheme();\r\n\r\nconst ModelData = (props) => {\r\n    const [data] = useState(props.data);\r\n    const [rows, setRows] = useState([]);\r\n    const [code, setCode] = useState([]);\r\n\r\n    React.useEffect(() => {\r\n        async function getData() {\r\n            const response = await fetch(data.data);\r\n            const reader = response.body.getReader();\r\n            const result = await reader.read();\r\n            const decoder = new TextDecoder(\"utf-8\");\r\n            const csv = decoder.decode(result.value);\r\n            const results = Papa.parse(csv, {header:true});\r\n            const rows = results.data;\r\n            setRows(rows);\r\n        }\r\n\r\n        async function getCode() {\r\n            const response = await fetch(data.code);\r\n            const reader = response.body.getReader();\r\n            const result = await reader.read();\r\n            const decoder = new TextDecoder(\"utf-8\");\r\n            const code = decoder.decode(result.value);\r\n            setCode(code);\r\n        }\r\n\r\n        getData();\r\n        getCode();\r\n    }, [data])\r\n\r\n    const deleteData = (id) => {\r\n        props.onChangeData(id)\r\n    }\r\n\r\n    const restoreData = (e) => {\r\n        e.preventDefault();\r\n        props.onChangeData(data.id)\r\n    }\r\n\r\n    const openData = () => {\r\n        let test = [];\r\n        for (let i = 0; i < 5; ++i){\r\n            let push_data = [];\r\n            for (let j in data.independent){\r\n                push_data.push(parseFloat(rows[i][data.independent[j]]));\r\n            }\r\n            test.push(push_data);\r\n        }\r\n\r\n        if (data.language === \"파이썬\"){\r\n            if(data.model_json !== \"\") {\r\n                tf.loadLayersModel(data.model_json).then(function(model){\r\n                    let predict =  model.predict(tf.tensor(test))\r\n\r\n                    let show = predict.arraySync()\r\n                    for (let i in show) {\r\n                        show[i].push(rows[i][data.dependent]);\r\n                    }\r\n                    show.unshift([\"예측한 값\", \"실제 값\"])\r\n                    show = tf.tensor(show);\r\n                    show.print();\r\n                })\r\n            }\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    var button = null;\r\n    if (data.isDeleted === false){\r\n        button = <ThemeProvider theme={theme}>\r\n                    <DeleteData data={data} onChangeData={deleteData}/>\r\n                    </ThemeProvider>;\r\n    } else {\r\n        button = <Button variant=\"contained\" color=\"secondary\" onClick={restoreData}>복원</Button>;\r\n    }\r\n\r\n    return(\r\n        <TableRow>\r\n            <TableCell>{data.name}</TableCell>\r\n            <TableCell>{data.type}</TableCell>\r\n            <TableCell>{data.loss_type}</TableCell>\r\n            <TableCell>{data.loss}</TableCell>\r\n            <TableCell>{data.accuracy}</TableCell>\r\n            <TableCell>{data.language}</TableCell>\r\n            <TableCell>{data.date_create}</TableCell>\r\n            <TableCell>{data.date_modify}</TableCell>\r\n            <TableCell><Button variant=\"contained\" color=\"primary\" onClick={openData}>확인</Button></TableCell>\r\n            <TableCell>\r\n                {button}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default ModelData;","import React, {useState} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ModelData from \"./ModelData\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    paper: {\r\n      marginLeft: 18,\r\n      marginRight: 18\r\n    },\r\n    table: {\r\n      minwidth: 1080\r\n    },\r\n    tableHead: {\r\n      fontSize: \"1.0rem\"\r\n    }\r\n}));\r\n\r\nconst ModelDatas = (props) => {\r\n\r\n    const [dataType, setDataType] = useState(\"id\");\r\n    const [sortType, setSortType] = useState(true);\r\n\r\n    const changeSortType = (event, type) => {\r\n        event.preventDefault();\r\n        if (dataType === type) {\r\n            setSortType(!sortType);\r\n        } else {\r\n            setDataType(type);\r\n            setSortType(true);\r\n        }\r\n        props.onChangeSortType(dataType, sortType);\r\n    }\r\n\r\n    const ChangeData = (e) => {\r\n        props.onChangeData(e);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    var lists = [];\r\n    for (var i in props.datas){\r\n      lists.push(<ModelData key={props.datas[i].id} data={props.datas[i]} onChangeData={ChangeData}></ModelData>)\r\n    }\r\n    \r\n    return(\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Table className={classes.table}>\r\n                <TableHead className={classes.TableHead}>\r\n                  <TableRow>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"name\")}>이름</Button></TableCell>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"type\")}>회귀/분류</Button></TableCell>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"loss_type\")}>loss 종류</Button></TableCell>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"loss\")}>loss</Button></TableCell>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"accuracy\")}>정확도</Button></TableCell>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"language\")}>언어 종류</Button></TableCell>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"date_create\")}>생성 날짜</Button></TableCell>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"date_modify\")}>수정 날짜</Button></TableCell>\r\n                    <TableCell>확인</TableCell>\r\n                    <TableCell>삭제</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {lists}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default ModelDatas;","import React, {useState} from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginLeft: 10\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n    }\r\n}))\r\n\r\nconst langs = [\"\", \"파이썬\", \"자바스크립트\"];\r\nconst modelTypes = [\"\", \"회귀\", \"분류\"];\r\n\r\nconst DetailSearch = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [loss_type, setLossType] = useState(\"\");\r\n    const [date_create, setDateCreate] = useState(\"\");\r\n    const [date_modify, setDateModify] = useState(\"\");\r\n    const [lang, setLang] = useState(\"\");\r\n    const [modelType, setModelType] = useState(\"\");\r\n    const classes = useStyles();\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    } \r\n\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    const handleLossType = (event) => {\r\n        setLossType(event.target.value);\r\n    }\r\n\r\n    const handleDateCreate = (event) => {\r\n        setDateCreate(event.target.value);\r\n    }\r\n\r\n    const handleDateModify = (event) => {\r\n        setDateModify(event.target.value);\r\n    }\r\n\r\n    const handleLangChange = (event) => {\r\n        setLang(event.target.value);\r\n    }\r\n\r\n    const handleModelTypeChange = (event) => {\r\n        setModelType(event.target.value);\r\n    }\r\n\r\n    const onSendSearchKeyword = (event) => {\r\n        setOpen(false);\r\n        // console.log({name: name, modelType, loss_type, lang, date_create, date_modify});\r\n        props.onChangeSearchKeyword({name: name, type: modelType, loss_type: loss_type, language: lang, date_create: date_create, date_modify: date_modify});\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <Button variant=\"contained\" onClick={handleClickOpen}>상세 검색</Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle onClose={handleClose}>상세 검색</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField className={classes.input} id=\"name\" label=\"이름\" variant=\"outlined\" onChange={handleName}/>\r\n                    <TextField\r\n                        className={classes.input}\r\n                        id=\"type\"\r\n                        select\r\n                        label=\"회귀/분류\"\r\n                        value={modelType}\r\n                        onChange={handleModelTypeChange}\r\n                        variant=\"outlined\"\r\n                        >\r\n                        {modelTypes.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField className={classes.input} id=\"loss_type\" label=\"Loss 종류\" variant=\"outlined\" onChange={handleLossType}/>\r\n                    <TextField\r\n                        className={classes.input}\r\n                        id=\"language\"\r\n                        select\r\n                        label=\"언어 종류\"\r\n                        value={lang}\r\n                        onChange={handleLangChange}\r\n                        variant=\"outlined\"\r\n                        >\r\n                        {langs.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField className={classes.input} id=\"date_create\" label=\"생성 날짜\" variant=\"outlined\" onChange={handleDateCreate}/>\r\n                    <TextField className={classes.input} id=\"date_modify\" label=\"수정 날짜\" variant=\"outlined\" onChange={handleDateModify}/>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSendSearchKeyword}>검색</Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailSearch;","import React, { useState } from \"react\";\r\nimport './App.css';\r\nimport ModelDatas from \"./components/ModelDatas\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade} from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport _ from \"lodash\";\r\nimport DetailSearch from \"./components/DetailSearch\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { unstable_createMuiStrictModeTheme } from \"@material-ui/core/styles\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport arrayDatas from \"./mainData.json\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme_preventerror = unstable_createMuiStrictModeTheme();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n      },\r\n      appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n      },\r\n      appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n      hide: {\r\n        display: 'none',\r\n      },\r\n      title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'block',\r\n        },\r\n      },\r\n      search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(1),\r\n          width: 'auto',\r\n        },\r\n      },\r\n      searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      inputRoot: {\r\n        color: 'inherit',\r\n      },\r\n      drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      drawerPaper: {\r\n        width: drawerWidth,\r\n      },\r\n      drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n      },\r\n      contentShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n    \r\n      inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: '12ch',\r\n          '&:focus': {\r\n            width: '20ch',\r\n          },\r\n        },\r\n      },\r\n    \r\n      drawerMenu: {\r\n        marginLeft: 20\r\n      },\r\n    \r\n      drawerSubMenu: {\r\n        marginLeft: 50\r\n      },\r\n\r\n      marginleft: {\r\n        marginLeft: 10\r\n      }\r\n}));\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    \r\n    const [searchKeyword, setSearchKeyword] = useState({\r\n      name: \"\",\r\n      type: \"\",\r\n      loss_type: \"\",\r\n      language: \"\",\r\n      date_create: \"\",\r\n      date_modify: \"\"\r\n    });\r\n    const [datas, setDatas] = useState(arrayDatas);\r\n\r\n    const [menu_type, setMenuType] = useState(\"data\");\r\n    const [open, setOpen] = useState(false);\r\n    const [searchType, setSearchType] = useState(\"name\");\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    }\r\n    \r\n    const handleSearchKeywordNameChange = (e) => {\r\n        setSearchKeyword({name: e.target.value, type: \"\", loss_type: \"\", language: \"\", date_create: \"\", date_modify: \"\"});\r\n        setSearchType(\"name\");\r\n    }\r\n\r\n    const onChangeSearchKeyword = (e) => {\r\n      setSearchKeyword(e);\r\n      setSearchType(\"all\");\r\n    }\r\n    \r\n    const currentTime = () => {\r\n        let now = new Date();\r\n        let year = String(now.getFullYear());\r\n        let month = String(now.getMonth() + 1);\r\n        if (month.length === 1) {\r\n          month = \"0\"+month;\r\n        }\r\n        let date = String(now.getDate());\r\n        return year+month+date;\r\n    }\r\n\r\n    const onChangeData = (e) => {\r\n        let newDatas = Array.from(datas);\r\n        for (let i in datas){\r\n            if (newDatas[i].id === e){\r\n                if (newDatas[i].isDeleted === false) {\r\n                newDatas[i].isDeleted = true;\r\n                newDatas[i].deleted_date = currentTime();\r\n                } else {\r\n                newDatas[i].isDeleted = false;\r\n                newDatas[i].deleted_date = NaN;\r\n                }\r\n                setDatas(newDatas);\r\n            }\r\n        }\r\n    }\r\n\r\n    const filteredComponents = (data) => {\r\n        if( menu_type === \"data\"){\r\n            data = data.filter((c) => {\r\n            return c.isDeleted === false;\r\n            })\r\n        } else if (menu_type === \"removed\"){\r\n            data = data.filter((c) => {\r\n            return c.isDeleted === true;\r\n            })\r\n        }\r\n        if (searchType === \"name\") {\r\n          data = data.filter((c) => {\r\n            return c.name.indexOf(searchKeyword.name) > -1;\r\n          })\r\n        }\r\n        else {\r\n          data = data.filter((c) => {\r\n            return c.name.indexOf(searchKeyword.name) > -1;\r\n          })\r\n          data = data.filter((c) => {\r\n              return c.type.indexOf(searchKeyword.type) > -1;\r\n          })\r\n          data = data.filter((c) => {\r\n              return c.loss_type.indexOf(searchKeyword.loss_type) > -1;\r\n          })\r\n          data = data.filter((c) => {\r\n              return c.language.indexOf(searchKeyword.language) > -1;\r\n          })  \r\n          data = data.filter((c) => {\r\n              return c.date_create.indexOf(searchKeyword.date_create) > -1;\r\n          })\r\n          data = data.filter((c) => {\r\n              return c.date_modify.indexOf(searchKeyword.date_modify) > -1;\r\n          })\r\n        }\r\n        \r\n        return data;\r\n    }\r\n\r\n    const onChangeType = (e, index) => {\r\n        let menu_type_list = [\"all\", \"data\", \"removed\"];\r\n        setMenuType(menu_type_list[index]);\r\n    }\r\n\r\n    const onChangeSort = (dataType, sortType) => {\r\n      let newDatas = Array.from(datas);\r\n      if (sortType){\r\n        newDatas = _.orderBy(newDatas, [dataType], [\"asc\"])\r\n      } else {\r\n        newDatas = _.orderBy(newDatas, [dataType], [\"desc\"])\r\n      }\r\n      setDatas(newDatas);\r\n    }\r\n\r\n    const handleSaveFile = () => {\r\n      let newDatas = Array.from(datas);\r\n      newDatas = _.orderBy(newDatas, [\"id\"], [\"asc\"]);\r\n      const fileData = JSON.stringify(newDatas);\r\n      const blob = new Blob([fileData], {type: \"text/plain\"});\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.download = 'mainData.json';\r\n      link.href = url;\r\n      link.click();\r\n\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n            })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        머신 러닝 데이터 분석 관리\r\n                    </Typography>\r\n\r\n                    <div className={classes.search}>\r\n                      <div className={classes.searchIcon}>\r\n                        <SearchIcon/>\r\n                      </div>\r\n                      <InputBase\r\n                          placeholder=\"검색하기\"\r\n                          classes={{\r\n                              root: classes.inputRoot,\r\n                              input: classes.inputInput,\r\n                          }}\r\n                          name=\"searchKeyword\"\r\n                          value={searchKeyword.name}\r\n                          onChange={handleSearchKeywordNameChange}\r\n                          inputProps={{ 'aria-label': 'search' }}\r\n                      />\r\n                    </div>\r\n                    <ThemeProvider theme={theme_preventerror}>\r\n                      <DetailSearch onChangeSearchKeyword={onChangeSearchKeyword}></DetailSearch>\r\n                    </ThemeProvider>\r\n                    <Button className={classes.marginleft} variant=\"contained\" onClick={handleSaveFile}>저장</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                    <List>\r\n                        <ListItemText primary=\"보기\" className={classes.drawerMenu}/>\r\n                        <List>\r\n                            {['전체보기', '데이터 확인', '휴지통'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemText primary={text} className={classes.drawerSubMenu} onClick={(event) => onChangeType(event, index)}/>\r\n                            </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </List>\r\n                <Divider />\r\n            </Drawer>\r\n\r\n            <main\r\n                className={clsx(classes.content, {\r\n                [classes.contentShift]: open,\r\n            })}>\r\n                <div className={classes.drawerHeader} />\r\n                <ModelDatas\r\n                    datas={filteredComponents(datas)}\r\n                    searchKeyword={searchKeyword}\r\n                    onChangeData={onChangeData}\r\n                    onChangeSortType={onChangeSort}>\r\n                </ModelDatas>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}