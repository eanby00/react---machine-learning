{"version":3,"sources":["components/DeleteData.js","components/ModelData.js","components/ModelDatas.js","App.js","reportWebVitals.js","index.js"],"names":["DeleteData","props","useState","open","setOpen","data","handleClose","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","Typography","gutterBottom","DialogActions","e","preventDefault","onChangeData","id","theme","unstable_createMuiStrictModeTheme","ModelData","button","isDeleted","ThemeProvider","TableRow","TableCell","name","type","loss_type","loss","accuracy","language","date_create","date_modify","useStyles","makeStyles","root","margin","spacing","paper","marginLeft","marginRight","table","minwidth","tableHead","fontSize","ModelDatas","ChangeData","classes","lists","i","datas","push","className","Paper","Table","TableHead","TableBody","drawerWidth","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","menuButton","hide","display","title","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","inputInput","paddingLeft","drawerMenu","drawerSubMenu","App","useTheme","searchKeyword","setSearchKeyword","deleted_date","NaN","code","setDatas","menu_type","setMenuType","currentTime","now","Date","year","String","getFullYear","month","getMonth","length","getDate","AppBar","clsx","Toolbar","IconButton","aria-label","edge","noWrap","InputBase","placeholder","input","value","onChange","target","inputProps","Drawer","anchor","direction","Divider","List","ListItemText","primary","map","text","index","ListItem","event","onChangeType","filter","c","indexOf","newDatas","Array","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c939929e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst DeleteData = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data] = useState(props.data);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const deleteData = (e) => {\r\n        e.preventDefault();\r\n        props.onChangeData(data.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>삭제</Button>\r\n                <Dialog open={open} onClose={handleClose}>\r\n                    <DialogTitle onClose={handleClose}>삭제 경고</DialogTitle>\r\n                    <DialogContent>\r\n                        <Typography gutterBottom>선택한 데이터가 삭제됩니다.</Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={deleteData}>삭제</Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteData;","import React, { useState } from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteData from \"./DeleteData\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { unstable_createMuiStrictModeTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = unstable_createMuiStrictModeTheme();\r\n\r\nconst ModelData = (props) => {\r\n    const [data] = useState(props.data);\r\n\r\n    const deleteData = (id) => {\r\n        props.onChangeData(id)\r\n    }\r\n\r\n    const restoreData = (e) => {\r\n        e.preventDefault();\r\n        props.onChangeData(data.id)\r\n    }\r\n\r\n    var button = null;\r\n    if (data.isDeleted === false){\r\n        button = <ThemeProvider theme={theme}>\r\n                    <DeleteData data={data} onChangeData={deleteData}/>\r\n                    </ThemeProvider>;\r\n    } else {\r\n        button = <Button variant=\"contained\" color=\"secondary\" onClick={restoreData}>복원</Button>;\r\n    }\r\n\r\n    return(\r\n        <TableRow>\r\n            <TableCell>{data.name}</TableCell>\r\n            <TableCell>{data.type}</TableCell>\r\n            <TableCell>{data.loss_type}</TableCell>\r\n            <TableCell>{data.loss}</TableCell>\r\n            <TableCell>{data.accuracy}</TableCell>\r\n            <TableCell>{data.language}</TableCell>\r\n            <TableCell>{data.date_create}</TableCell>\r\n            <TableCell>{data.date_modify}</TableCell>\r\n            <TableCell><Button variant=\"contained\" color=\"primary\">확인</Button></TableCell>\r\n            <TableCell>\r\n                {button}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default ModelData;","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ModelData from \"./ModelData\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    paper: {\r\n      marginLeft: 18,\r\n      marginRight: 18\r\n    },\r\n    table: {\r\n      minwidth: 1080\r\n    },\r\n    tableHead: {\r\n      fontSize: \"1.0rem\"\r\n    }\r\n}));\r\n\r\nconst ModelDatas = (props) => {\r\n\r\n    const ChangeData = (e) => {\r\n        props.onChangeData(e);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    var lists = [];\r\n    for (var i in props.datas){\r\n      lists.push(<ModelData key={props.datas[i].id} data={props.datas[i]} onChangeData={ChangeData}></ModelData>)\r\n    }\r\n    \r\n    return(\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Table className={classes.table}>\r\n                <TableHead className={classes.TableHead}>\r\n                  <TableRow>\r\n                    <TableCell>이름</TableCell>\r\n                    <TableCell>회귀/분류</TableCell>\r\n                    <TableCell>loss 종류</TableCell>\r\n                    <TableCell>loss</TableCell>\r\n                    <TableCell>정확도</TableCell>\r\n                    <TableCell>언어 종류</TableCell>\r\n                    <TableCell>생성 날짜</TableCell>\r\n                    <TableCell>수정 날짜</TableCell>\r\n                    <TableCell>확인</TableCell>\r\n                    <TableCell>삭제</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {lists}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default ModelDatas;","import React, { useState } from \"react\";\r\nimport './App.css';\r\nimport ModelDatas from \"./components/ModelDatas\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade} from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n      },\r\n      appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n      },\r\n      appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n      hide: {\r\n        display: 'none',\r\n      },\r\n      title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'block',\r\n        },\r\n      },\r\n      search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(1),\r\n          width: 'auto',\r\n        },\r\n      },\r\n      searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      inputRoot: {\r\n        color: 'inherit',\r\n      },\r\n      drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      drawerPaper: {\r\n        width: drawerWidth,\r\n      },\r\n      drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n      },\r\n      contentShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n    \r\n      inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: '12ch',\r\n          '&:focus': {\r\n            width: '20ch',\r\n          },\r\n        },\r\n      },\r\n    \r\n      drawerMenu: {\r\n        marginLeft: 20\r\n      },\r\n    \r\n      drawerSubMenu: {\r\n        marginLeft: 50\r\n      }\r\n}));\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    \r\n    const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n    const [datas, setDatas] = useState([\r\n        {\r\n            id: 1,\r\n            name: \"샘플1\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 0.05,\r\n            accuracy: 99.5,\r\n            language: \"파이썬\",\r\n            date_create: \"20210121\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"샘플2\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 1,\r\n            accuracy: 98,\r\n            language: \"파이썬\",\r\n            date_create: \"20210121\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"샘플3\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 0.5,\r\n            accuracy: 99,\r\n            language: \"파이썬\",\r\n            date_create: \"20210119\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"샘플4\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 2,\r\n            accuracy: 97,\r\n            language: \"파이썬\",\r\n            date_create: \"20210120\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"샘플5\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 1,\r\n            accuracy: 98,\r\n            language: \"파이썬\",\r\n            date_create: \"20210121\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"샘플6\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 1,\r\n            accuracy: 98,\r\n            language: \"파이썬\",\r\n            date_create: \"20210121\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        },\r\n        {\r\n            id: 7,\r\n            name: \"샘플7\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 1,\r\n            accuracy: 98,\r\n            language: \"파이썬\",\r\n            date_create: \"20210121\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        },\r\n        {\r\n            id: 8,\r\n            name: \"샘플8\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 1,\r\n            accuracy: 98,\r\n            language: \"파이썬\",\r\n            date_create: \"20210121\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        },\r\n        {\r\n            id: 9,\r\n            name: \"샘플9\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 1,\r\n            accuracy: 98,\r\n            language: \"파이썬\",\r\n            date_create: \"20210121\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        },\r\n        {\r\n            id: 10,\r\n            name: \"샘플10\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 1,\r\n            accuracy: 98,\r\n            language: \"파이썬\",\r\n            date_create: \"20210121\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        },\r\n        {\r\n            id: 11,\r\n            name: \"샘플11\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 1,\r\n            accuracy: 98,\r\n            language: \"파이썬\",\r\n            date_create: \"20210121\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        },\r\n        {\r\n            id: 12,\r\n            name: \"샘플12\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 1,\r\n            accuracy: 98,\r\n            language: \"파이썬\",\r\n            date_create: \"20210121\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        },\r\n        {\r\n            id: 13,\r\n            name: \"샘플13\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 1,\r\n            accuracy: 98,\r\n            language: \"파이썬\",\r\n            date_create: \"20210121\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        },\r\n        {\r\n            id: 14,\r\n            name: \"샘플14\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 1,\r\n            accuracy: 98,\r\n            language: \"파이썬\",\r\n            date_create: \"20210121\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        },\r\n        {\r\n            id: 15,\r\n            name: \"샘플15\",\r\n            type: \"회귀\",\r\n            loss_type: \"mse\",\r\n            loss: 1,\r\n            accuracy: 98,\r\n            language: \"파이썬\",\r\n            date_create: \"20210121\",\r\n            date_modify: \"20210121\",\r\n            isDeleted: false,\r\n            deleted_date: NaN,\r\n            code: \"\"\r\n        }\r\n        ]);\r\n    const [menu_type, setMenuType] = useState(\"data\");\r\n    const [open, setOpen] = useState(false);\r\n    \r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    }\r\n    \r\n      \r\n    \r\n    const handleSearchKeywordChange = (e) => {\r\n        setSearchKeyword(e.target.value);\r\n    }\r\n    \r\n    const currentTime = () => {\r\n        let now = new Date();\r\n        let year = String(now.getFullYear());\r\n        let month = String(now.getMonth() + 1);\r\n        if (month.length === 1) {\r\n          month = \"0\"+month;\r\n        }\r\n        let date = String(now.getDate());\r\n        return year+month+date;\r\n    }\r\n\r\n    const onChangeData = (e) => {\r\n        for (let i in datas){\r\n            let newDatas = Array.from(datas);\r\n            if (newDatas[i].id === e){\r\n                if (newDatas[i].isDeleted === false) {\r\n                newDatas[i].isDeleted = true;\r\n                newDatas[i].deleted_date = currentTime();\r\n                } else {\r\n                newDatas[i].isDeleted = false;\r\n                newDatas[i].deleted_date = NaN;\r\n                }\r\n                setDatas(newDatas);\r\n            }\r\n        }\r\n    }\r\n\r\n    const filteredComponents = (data) => {\r\n        if(menu_type === \"data\"){\r\n            data = data.filter((c) => {\r\n            return c.isDeleted === false;\r\n            })\r\n        } else if (menu_type === \"removed\"){\r\n            data = data.filter((c) => {\r\n            return c.isDeleted === true;\r\n            })\r\n        }\r\n        data = data.filter((c) => {\r\n            return c.name.indexOf(searchKeyword) > -1;\r\n        })\r\n        return data;\r\n    }\r\n\r\n    const onChangeType = (e, index) => {\r\n        let menu_type_list = [\"all\", \"data\", \"removed\"];\r\n        setMenuType(menu_type_list[index]);\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n            })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        머신 러닝 데이터 분석 관리\r\n                    </Typography>\r\n\r\n                    <div className={classes.search}>\r\n                    <div className={classes.searchIcon}>\r\n                    <SearchIcon />\r\n                    </div>\r\n                        <InputBase\r\n                            placeholder=\"검색하기\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            name=\"searchKeyword\"\r\n                            value={searchKeyword}\r\n                            onChange={handleSearchKeywordChange}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                    <List>\r\n                        <ListItemText primary=\"보기\" className={classes.drawerMenu}/>\r\n                        <List>\r\n                            {['전체보기', '데이터 확인', '휴지통'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemText primary={text} className={classes.drawerSubMenu} onClick={(event) => onChangeType(event, index)}/>\r\n                            </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </List>\r\n                <Divider />\r\n            </Drawer>\r\n\r\n            <main\r\n                className={clsx(classes.content, {\r\n                [classes.contentShift]: open,\r\n            })}>\r\n                <div className={classes.drawerHeader} />\r\n                <ModelDatas\r\n                    datas={filteredComponents(datas)}\r\n                    searchKeyword={searchKeyword}\r\n                    onChangeData={onChangeData}>\r\n                </ModelDatas>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}