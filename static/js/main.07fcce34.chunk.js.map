{"version":3,"sources":["components/DeleteData.js","components/ConfirmData.js","components/ModelData.js","components/ModelDatas.js","components/DetailSearch.js","components/CreateData.js","App.js","reportWebVitals.js","index.js"],"names":["DeleteData","props","useState","open","setOpen","data","handleClose","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","Typography","gutterBottom","DialogActions","e","preventDefault","onChangeData","id","useStyles","makeStyles","theme","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","independent","textAlign","dependent","input","margin","spacing","width","root","accordion","marginBottom","accoHeading","detail","display","alignItems","flexDirection","paper","overflowX","text","whiteSpace","padding","textOverflow","blue","background","ConfirmData","classes","tests","Array","from","length","rows","setRows","result","setResult","React","useEffect","a","fetch","sampleData","response","reader","body","getReader","read","decoder","TextDecoder","csv","decode","value","results","PaPa","parse","header","row","getData","deleted","isDeleted","deleted_date","texts","i","push","TextField","className","label","event","target","onChange","parseFloat","tableHead","cell","TableCell","tableBody","tableCells","TableRow","name","language","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","Paper","type","loss_type","loss","accuracy","date_create","date_modify","Table","TableHead","TableBody","href","dataSource","rel","code","model_json","temp","tf","then","model","predict","arraySync","concat","unstable_createMuiStrictModeTheme","tableCell_low","breakpoints","down","tableCell_medium","tableCell_high","ModelData","button","ThemeProvider","overflow","ModelDatas","dataType","setDataType","sortType","setSortType","changeSortType","onChangeSortType","ChangeData","lists","datas","table","marginLeft","langs","modelTypes","DetailSearch","setName","setLossType","setDateCreate","setDateModify","lang","setLang","modelType","setModelType","word","select","map","option","MenuItem","onChangeSearchKeyword","CreateData","setId","setType","setLoss","setAccuracy","setLanguage","setCode","setDataSource","desc","setDesc","data_link","setDataLink","setModelJson","setIndependent","setDependent","sampledata","setSampledata","currentTime","now","Date","year","String","getFullYear","month","getMonth","getDate","isNaN","split","newData","onCreateData","drawerWidth","theme_preventerror","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","title","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","height","pointerEvents","justifyContent","inputRoot","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","inputInput","paddingLeft","drawerMenu","drawerSubMenu","marginleft","upBotton","bottom","right","ScrollTop","children","window","trigger","useScrollTrigger","undefined","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","App","useTheme","searchKeyword","setSearchKeyword","arrayDatas","setDatas","menu_type","setMenuType","searchType","setSearchType","Box","component","clsx","AppBar","Toolbar","IconButton","aria-label","edge","noWrap","InputBase","placeholder","inputProps","newDatas","_","orderBy","fileData","JSON","stringify","replace","blob","Blob","url","URL","createObjectURL","link","createElement","download","click","Drawer","direction","Divider","List","ListItemText","primary","index","ListItem","onChangeType","conponent","filter","c","indexOf","NaN","Fab","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.07fcce34.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// material-ui/core에서 import\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst DeleteData = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data] = useState(props.data);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const deleteData = (e) => {\r\n        e.preventDefault();\r\n        props.onChangeData(data.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>삭제</Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle onClose={handleClose}>삭제 경고</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography gutterBottom>선택한 데이터가 삭제됩니다.</Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={deleteData}>삭제</Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteData;","import React, { useState } from \"react\";\r\n\r\n// 기타 기능을 위한 import\r\nimport PaPa from \"papaparse\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n\r\n// material-ui/core에서 import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// material-ui/icons에서 import\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    independent: {\r\n        textAlign: \"left\"\r\n    },\r\n    dependent: {\r\n        textAlign: \"right\"\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n        width: '40%',\r\n    },\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    accordion: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    accoHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    detail: {\r\n        display: \"flex\",\r\n        alignItems : \"flex-start\",\r\n        flexDirection : \"column\"\r\n    },\r\n    paper: {\r\n        width: \"100%\",\r\n        overflowX: \"auto\",\r\n        \r\n    },\r\n    text: {\r\n        width: \"100%\",\r\n        overflowX: \"auto\",\r\n        whiteSpace: \"nowrap\",\r\n        padding: theme.spacing(0.5),\r\n        textOverflow: \"ellipsis\"\r\n    },\r\n    blue: {\r\n        background: \"#3f51b5\",\r\n        color: \"white\"\r\n    },\r\n}))\r\n\r\nconst ConfirmData = (props) => {\r\n    const classes = useStyles();\r\n    const [data] = useState(props.data);\r\n    const [open, setOpen] = useState(false);\r\n    var tests = Array.from({length: data.independent.length}, () => 0);\r\n    const [rows, setRows] = useState([]);\r\n    const [result, setResult] = useState([]);\r\n    \r\n    React.useEffect(() => {\r\n        async function getData() {\r\n            const response = await fetch(data.sampleData);\r\n            const reader = response.body.getReader();\r\n            const result = await reader.read();\r\n            const decoder = new TextDecoder(\"utf-8\");\r\n            const csv = decoder.decode(result.value);\r\n            const results = PaPa.parse(csv, {header: false});\r\n            const row = results.data;\r\n            setRows(row)\r\n        }\r\n        if (data.sampleData !== \"\"){\r\n            getData()\r\n        }\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    } \r\n\r\n    const handleChange = (e, id) => {\r\n        tests[id] = parseFloat(e.target.value);\r\n    }\r\n\r\n    const openData = () => {\r\n\r\n        if(data.model_json !== \"\") {\r\n            let temp = [];\r\n            for (let i in tests){\r\n                temp.push(<TableCell key={\"result\"+temp.length}>{tests[i]}</TableCell>)\r\n            }\r\n            tf.loadLayersModel(data.model_json).then(function(model){\r\n                let predict =  model.predict(tf.tensor(tests, [1,data.independent.length]))\r\n\r\n                temp.push(<TableCell key={\"result\"+temp.length}>{predict.arraySync()[0][0]}</TableCell>);\r\n                setResult(result.concat(<TableRow key={\"result\"+result.length}>{temp}</TableRow>))\r\n            })\r\n        }\r\n    }\r\n\r\n    let deleted = null;\r\n    if(data.isDeleted === true) {\r\n        deleted = <Typography variant=\"body2\">삭제된 데이터입니다. 삭제 날짜: {data.deleted_date}</Typography>\r\n    }\r\n\r\n    var texts = []; \r\n    for (let i in data.independent){\r\n        texts.push(<TextField key={i} className={classes.input} id={data.independent[i]} label={data.independent[i]} variant=\"outlined\" onClick={(event) => {event.target.value = null}} onChange={(event) => handleChange(event, i)}/>)\r\n    }\r\n    \r\n    let tableHead = [];\r\n    for (let cell in data.independent){\r\n        tableHead.push(<TableCell key={\"head\"+cell}>{data.independent[cell]}</TableCell>)\r\n    }\r\n    \r\n    for (let cell in data.dependent){\r\n        tableHead.push(<TableCell key={\"head\"+cell+data.independent.length} >{data.dependent[cell]}</TableCell>)\r\n    }\r\n    \r\n    let tableBody = [];\r\n    for (let row in rows){\r\n        let tableCells = []\r\n        for (let cell in rows[row]){\r\n            tableCells.push(<TableCell key={\"body\"+cell} >{rows[row][cell]}</TableCell>)\r\n        }\r\n        tableBody.push(<TableRow key={row}>{tableCells}</TableRow>)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>확인</Button>\r\n            <Dialog className={classes.root} open={open} onClose={handleClose} color=\"primary\">\r\n                <DialogTitle className={classes.blue} onClose={handleClose}>{data.name} by {data.language}</DialogTitle>\r\n                <DialogContent>\r\n                    <Accordion className={classes.accordion}>\r\n                        <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                        >\r\n                            <Typography className={classes.accoHeading}>모델 정보 확인</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={classes.detail}>\r\n                            <Paper className={classes.text}>\r\n                                {deleted}\r\n                                <Typography variant=\"body2\">분석 타입: {data.type}</Typography>\r\n                                <Typography variant=\"body2\">loss 형식: {data.loss_type}</Typography>\r\n                                <Typography variant=\"body2\">loss: {data.loss}</Typography>\r\n                                <Typography variant=\"body2\">accuracy: {data.accuracy}</Typography>\r\n                                <Typography variant=\"body2\">생성 날짜: {data.date_create}</Typography>\r\n                                <Typography variant=\"body2\">수정 날짜: {data.date_modify}</Typography>\r\n                            </Paper>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    \r\n                    <Accordion className={classes.accordion}>\r\n                        <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                        >\r\n                            <Typography className={classes.accoHeading}>샘플 데이터로 모델 확인</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={classes.detail}>\r\n                            <Paper className={classes.paper}>\r\n                                {rows? <Table><TableHead><TableRow>{tableHead}</TableRow></TableHead><TableBody>{tableBody}</TableBody></Table> : \"\"}\r\n                            </Paper>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                \r\n                    <Accordion className={classes.accordion}>\r\n                        <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                        >\r\n                            <Typography className={classes.accoHeading}>모델로 테스트하기</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={classes.detail}>\r\n                            <Typography variant=\"h6\">데이터 입력</Typography>\r\n                            <Paper className={classes.paper}>{texts}</Paper>\r\n                            <Paper className={classes.paper}>\r\n                                <Table><TableHead><TableRow>{tableHead}</TableRow></TableHead><TableBody>{result}</TableBody></Table>\r\n                            </Paper>\r\n\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                \r\n                    <Accordion className={classes.accordion}>\r\n                        <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                        >\r\n                            <Typography className={classes.accoHeading}>출처</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={classes.detail}>\r\n                            <Paper className={classes.text}>\r\n                                <Typography variant=\"body2\">데이터 출처: <a href={data.dataSource} target=\"_blank\" rel=\"noreferrer\">{data.dataSource}</a></Typography>\r\n                                <Typography variant=\"body2\">데이터 링크: <a href={data.data} target=\"_blank\" rel=\"noreferrer\">{data.data}</a></Typography>\r\n                                <Typography variant=\"body2\">코드 링크: <a href={data.code} target=\"_blank\" rel=\"noreferrer\">{data.code}</a></Typography>\r\n                            </Paper>\r\n\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={openData}>테스트</Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmData;","import React, { useState } from \"react\";\r\n\r\n// 컴포넌트 import\r\nimport DeleteData from \"./DeleteData\";\r\nimport ConfirmData from \"./ConfirmData\";\r\n\r\n// material-ui/core에서 import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { unstable_createMuiStrictModeTheme } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst theme = unstable_createMuiStrictModeTheme();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tableCell_low: {\r\n      [theme.breakpoints.down('xs')]: {\r\n        display: \"none\"\r\n      },\r\n    },\r\n    tableCell_medium: {\r\n      [theme.breakpoints.down('sm')]: {\r\n        display: \"none\"\r\n      },\r\n    },\r\n    tableCell_high: {\r\n      [theme.breakpoints.down('md')]: {\r\n        display: \"none\"\r\n      },\r\n    },\r\n}));\r\n\r\nconst ModelData = (props) => {\r\n    const classes = useStyles();\r\n    const [data] = useState(props.data);\r\n\r\n    const deleteData = (id) => {\r\n        props.onChangeData(id)\r\n    }\r\n\r\n    const restoreData = (e) => {\r\n        e.preventDefault();\r\n        props.onChangeData(data.id)\r\n    }\r\n\r\n    var button = null;\r\n\r\n    if (data.isDeleted === false){\r\n        button = <ThemeProvider theme={theme}>\r\n                    <DeleteData data={data} onChangeData={deleteData}/>\r\n                    </ThemeProvider>;\r\n    } else {\r\n        button = <Button variant=\"contained\" color=\"secondary\" onClick={restoreData}>복원</Button>;\r\n    }\r\n\r\n    return(\r\n        \r\n            <TableRow>\r\n                <TableCell>{data.name}</TableCell>\r\n                <TableCell className={classes.tableCell_low}>{data.type}</TableCell>\r\n                <TableCell className={classes.tableCell_medium}>{data.loss_type}</TableCell>\r\n                <TableCell className={classes.tableCell_low}>{data.loss}</TableCell>\r\n                <TableCell className={classes.tableCell_medium}>{data.accuracy}</TableCell>\r\n                <TableCell className={classes.tableCell_medium}>{data.language}</TableCell>\r\n                <TableCell className={classes.tableCell_high}>{data.date_create}</TableCell>\r\n                <TableCell className={classes.tableCell_high}>{data.date_modify}</TableCell>\r\n                <TableCell>\r\n                    <ThemeProvider theme={theme}>\r\n                        <ConfirmData data={data}></ConfirmData>\r\n                    </ThemeProvider>\r\n                </TableCell>\r\n                <TableCell>\r\n                    {button}\r\n                </TableCell>\r\n            </TableRow>\r\n    );\r\n}\r\n\r\nexport default ModelData;","import React, {useState} from \"react\";\r\n\r\n// 컴포넌트 import\r\nimport ModelData from \"./ModelData\";\r\n\r\n// material-ui/core에서 import\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"100%\",\r\n      overflow: \"auto\"\r\n    },\r\n    tableHead: {\r\n      fontSize: \"1.0rem\",\r\n    },\r\n    tableCell_low: {\r\n      [theme.breakpoints.down('xs')]: {\r\n        display: \"none\"\r\n      },\r\n    },\r\n    tableCell_medium: {\r\n      [theme.breakpoints.down('sm')]: {\r\n        display: \"none\"\r\n      },\r\n    },\r\n    tableCell_high: {\r\n      [theme.breakpoints.down('md')]: {\r\n        display: \"none\"\r\n      },\r\n    },\r\n}));\r\n\r\nconst ModelDatas = (props) => {\r\n\r\n    const [dataType, setDataType] = useState(\"id\");\r\n    const [sortType, setSortType] = useState(true);\r\n    const classes = useStyles();\r\n\r\n    const changeSortType = (event, type) => {\r\n        event.preventDefault();\r\n        if (dataType === type) {\r\n            setSortType(!sortType);\r\n        } else {\r\n            setDataType(type);\r\n            setSortType(true);\r\n        }\r\n        props.onChangeSortType(dataType, sortType);\r\n    }\r\n\r\n    const ChangeData = (e) => {\r\n        props.onChangeData(e);\r\n    }\r\n\r\n    var lists = [];\r\n    for (var i in props.datas){\r\n      lists.push(<ModelData key={props.datas[i].id} data={props.datas[i]} onChangeData={ChangeData}></ModelData>)\r\n    }\r\n    \r\n    return(\r\n        <Paper className={classes.root}>\r\n          <Table className={classes.table}>\r\n            <TableHead className={classes.TableHead}>\r\n              <TableRow>\r\n                <TableCell><Button onClick={(event) => changeSortType(event, \"name\")}>이름</Button></TableCell>\r\n                <TableCell className={classes.tableCell_low}><Button onClick={(event) => changeSortType(event, \"type\")}>회귀/분류</Button></TableCell>\r\n                <TableCell className={classes.tableCell_medium}><Button onClick={(event) => changeSortType(event, \"loss_type\")}>loss 종류</Button></TableCell>\r\n                <TableCell className={classes.tableCell_low}><Button onClick={(event) => changeSortType(event, \"loss\")}>loss</Button></TableCell>\r\n                <TableCell className={classes.tableCell_medium}><Button onClick={(event) => changeSortType(event, \"accuracy\")}>정확도</Button></TableCell>\r\n                <TableCell className={classes.tableCell_medium}><Button onClick={(event) => changeSortType(event, \"language\")}>언어 종류</Button></TableCell>\r\n                <TableCell className={classes.tableCell_high}><Button onClick={(event) => changeSortType(event, \"date_create\")}>생성 날짜</Button></TableCell>\r\n                <TableCell className={classes.tableCell_high}><Button onClick={(event) => changeSortType(event, \"date_modify\")}>수정 날짜</Button></TableCell>\r\n                <TableCell>확인</TableCell>\r\n                <TableCell>삭제</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {lists}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default ModelDatas;","import React, {useState} from \"react\";\r\n\r\n// material-ui/core에서 import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginLeft: 10\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n    }\r\n}))\r\n\r\nconst langs = [\"\", \"파이썬\", \"자바스크립트\"];\r\nconst modelTypes = [\"\", \"회귀\", \"분류\"];\r\n\r\nconst DetailSearch = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [loss_type, setLossType] = useState(\"\");\r\n    const [date_create, setDateCreate] = useState(\"\");\r\n    const [date_modify, setDateModify] = useState(\"\");\r\n    const [lang, setLang] = useState(\"\");\r\n    const [modelType, setModelType] = useState(\"\");\r\n    const classes = useStyles();\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    } \r\n\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    const handleLossType = (event) => {\r\n        setLossType(event.target.value);\r\n    }\r\n\r\n    const handleDateCreate = (event) => {\r\n        setDateCreate(event.target.value);\r\n    }\r\n\r\n    const handleDateModify = (event) => {\r\n        setDateModify(event.target.value);\r\n    }\r\n\r\n    const handleLangChange = (event) => {\r\n        setLang(event.target.value);\r\n    }\r\n\r\n    const handleModelTypeChange = (event) => {\r\n        setModelType(event.target.value);\r\n    }\r\n\r\n    const onSendSearchKeyword = (event) => {\r\n        setOpen(false);\r\n        props.onChangeSearchKeyword({name: name, type: modelType, loss_type: loss_type, language: lang, date_create: date_create, date_modify: date_modify});\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <Button variant=\"contained\" onClick={handleClickOpen} className={classes.word}>상세검색</Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle onClose={handleClose}>상세 검색</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField className={classes.input} id=\"name\" label=\"이름\" variant=\"outlined\" onChange={handleName}/>\r\n                    <TextField\r\n                        className={classes.input}\r\n                        id=\"type\"\r\n                        select\r\n                        label=\"회귀/분류\"\r\n                        value={modelType}\r\n                        onChange={handleModelTypeChange}\r\n                        variant=\"outlined\"\r\n                        >\r\n                        {modelTypes.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField className={classes.input} id=\"loss_type\" label=\"Loss 종류\" variant=\"outlined\" onChange={handleLossType}/>\r\n                    <TextField\r\n                        className={classes.input}\r\n                        id=\"language\"\r\n                        select\r\n                        label=\"언어 종류\"\r\n                        value={lang}\r\n                        onChange={handleLangChange}\r\n                        variant=\"outlined\"\r\n                        >\r\n                        {langs.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField className={classes.input} id=\"date_create\" label=\"생성 날짜\" variant=\"outlined\" onChange={handleDateCreate}/>\r\n                    <TextField className={classes.input} id=\"date_modify\" label=\"수정 날짜\" variant=\"outlined\" onChange={handleDateModify}/>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSendSearchKeyword}>검색</Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailSearch;","import React, { useState } from \"react\";\r\n\r\n// material-ui/core에서 import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginLeft: 10\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n        width: '40%',\r\n    }\r\n}))\r\n\r\nconst CreateData = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [data] = useState(props.data);\r\n    const [id, setId] = useState(data.length);\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"회귀\");\r\n    const [loss_type, setLossType] = useState(\"\");\r\n    const [loss, setLoss] = useState(0);\r\n    const [accuracy, setAccuracy] = useState(0);\r\n    const [language, setLanguage] = useState(\"파이썬\");\r\n    const [code, setCode] = useState(\"\");\r\n    const [dataSource, setDataSource] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [data_link, setDataLink] = useState(\"\");\r\n    const [model_json, setModelJson] = useState(\"\");\r\n    const [independent, setIndependent] = useState([]);\r\n    const [dependent, setDependent] = useState([]);\r\n    const [sampledata, setSampledata] = useState(\"\");\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const currentTime = () => {\r\n        let now = new Date();\r\n        let year = String(now.getFullYear());\r\n        let month = String(now.getMonth() + 1);\r\n        if (month.length === 1) {\r\n          month = \"0\"+month;\r\n        }\r\n        let date = String(now.getDate());\r\n        return year+month+date;\r\n    }\r\n\r\n    const handleDataChange = () => {\r\n        const newData = {\r\n            id: id,\r\n            name: name,\r\n            type: type,\r\n            loss_type: loss_type,\r\n            loss: loss,\r\n            accuracy: accuracy,\r\n            language: language,\r\n            date_create: currentTime(),\r\n            date_modify: currentTime(),\r\n            isDeleted: false,\r\n            deleted_date: 0,\r\n            code: code,\r\n            dataSource: dataSource,\r\n            desc: desc,\r\n            data: data_link,\r\n            model_json: model_json,\r\n            independent: independent,\r\n            dependent: dependent,\r\n            sampledata: sampledata\r\n        };\r\n        setId(id+1);\r\n        props.onCreateData(newData);\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button className={classes.root} variant=\"contained\" onClick={handleClickOpen}>추가</Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle onClose={handleClose}>데이터 추가</DialogTitle>\r\n                <DialogContent>\r\n                    <Paper>\r\n                        <TextField className={classes.input} label=\"이름\" variant=\"outlined\" onChange={(event) => setName(event.target.value)}/>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            select\r\n                            label=\"회귀/분류\"\r\n                            value={type}\r\n                            onChange={(event) => setType(event.target.value)}\r\n                            variant=\"outlined\"\r\n                            >\r\n                            <MenuItem key=\"regression\" value=\"회귀\">회귀</MenuItem>\r\n                            <MenuItem key=\"classification\" value=\"분류\">분류</MenuItem>\r\n                        </TextField>\r\n                        <TextField className={classes.input} label=\"loss 종류\" variant=\"outlined\" onChange={(event) => setLossType(event.target.value)}/>\r\n                        <TextField className={classes.input} label=\"loss\" variant=\"outlined\" onChange={(event) => setLoss(isNaN(parseFloat(event.target.value))? 0 : event.target.value)}/>\r\n                        <TextField className={classes.input} label=\"정확도\" variant=\"outlined\" onChange={(event) => setAccuracy(isNaN(parseFloat(event.target.value))? 0 : event.target.value)}/>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            select\r\n                            label=\"언어 종류\"\r\n                            value={language}\r\n                            onChange={(event) => setLanguage(event.target.value)}\r\n                            variant=\"outlined\"\r\n                            >\r\n                            <MenuItem key=\"python\" value=\"파이썬\">파이썬</MenuItem>\r\n                            <MenuItem key=\"javascript\" value=\"자바스크립트\">자바스크립트</MenuItem>\r\n                        </TextField>\r\n                        <TextField className={classes.input} label=\"코드 링크\" variant=\"outlined\" onChange={(event) => setCode(event.target.value)}/>\r\n                        <TextField className={classes.input} label=\"데이터 출처\" variant=\"outlined\" onChange={(event) => setDataSource(event.target.value)}/>\r\n                        <TextField className={classes.input} label=\"설명\" variant=\"outlined\" onChange={(event) => setDesc(event.target.value)}/>\r\n                        <TextField className={classes.input} label=\"데이터 링크\" variant=\"outlined\" onChange={(event) => setDataLink(event.target.value)}/>\r\n                        <TextField className={classes.input} label=\"모델 링크\" variant=\"outlined\" onChange={(event) => setModelJson(event.target.value)}/>\r\n                        <TextField className={classes.input} label=\"독립 변수\" variant=\"outlined\" onChange={(event) => setIndependent(event.target.value.split(\" \"))}/>\r\n                        <TextField className={classes.input} label=\"종속 변수\" variant=\"outlined\" onChange={(event) => setDependent(event.target.value.split(\" \"))}/>\r\n                        <TextField className={classes.input} label=\"샘플 데이터 링크\" variant=\"outlined\" onChange={(event) => setSampledata(event.target.value)}/>\r\n                    </Paper>\r\n                    <Typography>독립 변수와 종속 변수는 빈칸을 통해 구분하십시오.</Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleDataChange}>추가</Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateData;","import React, { useState } from \"react\";\r\n\r\n// 기타 기능을 위한 import\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport _ from \"lodash\";\r\n\r\n// 컴포넌트와 데이터 import\r\nimport arrayDatas from \"./mainData.json\"\r\nimport ModelDatas from \"./components/ModelDatas\";\r\nimport DetailSearch from \"./components/DetailSearch\";\r\nimport CreateData from \"./components/CreateData\";\r\n\r\n// material-ui/core에서 import\r\nimport { makeStyles, useTheme, fade } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { unstable_createMuiStrictModeTheme } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\n// material-ui/icons에서 import\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme_preventerror = unstable_createMuiStrictModeTheme();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n      },\r\n      appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n      },\r\n      appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n      hide: {\r\n        display: 'none',\r\n      },\r\n      title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'block',\r\n        },\r\n      },\r\n      search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(1),\r\n          width: 'auto',\r\n        },\r\n      },\r\n      searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      inputRoot: {\r\n        color: 'inherit',\r\n      },\r\n      drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      drawerPaper: {\r\n        width: drawerWidth,\r\n      },\r\n      drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n      },\r\n      contentShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n    \r\n      inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: '12ch',\r\n          '&:focus': {\r\n            width: '20ch',\r\n          },\r\n        },\r\n      },\r\n    \r\n      drawerMenu: {\r\n        marginLeft: 20\r\n      },\r\n    \r\n      drawerSubMenu: {\r\n        marginLeft: 50\r\n      },\r\n\r\n      marginleft: {\r\n        marginLeft: 10\r\n      },\r\n      upBotton: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n      },\r\n}));\r\n\r\nfunction ScrollTop(props) {\r\n  const { children, window } = props;\r\n  const classes = useStyles();\r\n  const trigger = useScrollTrigger({\r\n    target: window ? window() : undefined,\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\" className={classes.upBotton}>\r\n        {children}\r\n      </div>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\nScrollTop.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst App = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    \r\n    const [searchKeyword, setSearchKeyword] = useState({\r\n      name: \"\",\r\n      type: \"\",\r\n      loss_type: \"\",\r\n      language: \"\",\r\n      date_create: \"\",\r\n      date_modify: \"\"\r\n    });\r\n    const [datas, setDatas] = useState(arrayDatas);\r\n    const [menu_type, setMenuType] = useState(\"data\");\r\n    const [open, setOpen] = useState(false);\r\n    const [searchType, setSearchType] = useState(\"name\");\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    }\r\n    \r\n    const handleSearchKeywordNameChange = (e) => {\r\n        setSearchKeyword({name: e.target.value, type: \"\", loss_type: \"\", language: \"\", date_create: \"\", date_modify: \"\"});\r\n        setSearchType(\"name\");\r\n    }\r\n\r\n    const onChangeSearchKeyword = (e) => {\r\n      setSearchKeyword(e);\r\n      setSearchType(\"all\");\r\n    }\r\n    \r\n    const currentTime = () => {\r\n        let now = new Date();\r\n        let year = String(now.getFullYear());\r\n        let month = String(now.getMonth() + 1);\r\n        if (month.length === 1) {\r\n          month = \"0\"+month;\r\n        }\r\n        let date = String(now.getDate());\r\n        return year+month+date;\r\n    }\r\n\r\n    const onChangeData = (e) => {\r\n        let newDatas = Array.from(datas);\r\n        for (let i in datas){\r\n            if (newDatas[i].id === e){\r\n                if (newDatas[i].isDeleted === false) {\r\n                newDatas[i].isDeleted = true;\r\n                newDatas[i].deleted_date = currentTime();\r\n                } else {\r\n                newDatas[i].isDeleted = false;\r\n                newDatas[i].deleted_date = NaN;\r\n                }\r\n                setDatas(newDatas);\r\n            }\r\n        }\r\n    }\r\n\r\n    const filteredComponents = (data) => {\r\n        if( menu_type === \"data\"){\r\n            data = data.filter((c) => {\r\n            return c.isDeleted === false;\r\n            })\r\n        } else if (menu_type === \"removed\"){\r\n            data = data.filter((c) => {\r\n            return c.isDeleted === true;\r\n            })\r\n        }\r\n        if (searchType === \"name\") {\r\n          data = data.filter((c) => {\r\n            return c.name.indexOf(searchKeyword.name) > -1;\r\n          })\r\n        }\r\n        else {\r\n          data = data.filter((c) => {\r\n            return c.name.indexOf(searchKeyword.name) > -1;\r\n          })\r\n          data = data.filter((c) => {\r\n              return c.type.indexOf(searchKeyword.type) > -1;\r\n          })\r\n          data = data.filter((c) => {\r\n              return c.loss_type.indexOf(searchKeyword.loss_type) > -1;\r\n          })\r\n          data = data.filter((c) => {\r\n              return c.language.indexOf(searchKeyword.language) > -1;\r\n          })  \r\n          data = data.filter((c) => {\r\n              return c.date_create.indexOf(searchKeyword.date_create) > -1;\r\n          })\r\n          data = data.filter((c) => {\r\n              return c.date_modify.indexOf(searchKeyword.date_modify) > -1;\r\n          })\r\n        }\r\n        \r\n        return data;\r\n    }\r\n\r\n    const onChangeType = (e, index) => {\r\n        let menu_type_list = [\"all\", \"data\", \"removed\"];\r\n        setMenuType(menu_type_list[index]);\r\n    }\r\n\r\n    const onChangeSort = (dataType, sortType) => {\r\n      let newDatas = Array.from(datas);\r\n      if (sortType){\r\n        newDatas = _.orderBy(newDatas, [dataType], [\"asc\"])\r\n      } else {\r\n        newDatas = _.orderBy(newDatas, [dataType], [\"desc\"])\r\n      }\r\n      setDatas(newDatas);\r\n    }\r\n\r\n    const handleSaveFile = () => {\r\n      let newDatas = Array.from(datas);\r\n      newDatas = _.orderBy(newDatas, [\"id\"], [\"asc\"]);\r\n      let fileData = JSON.stringify(newDatas);\r\n      fileData = fileData.replace(/},/gi, \"},\\n\");\r\n      const blob = new Blob([fileData], {type: \"text/plain\"});\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.download = 'mainData.json';\r\n      link.href = url;\r\n      link.click();\r\n\r\n    }\r\n\r\n    const onCreateData = (newData) => {\r\n      setDatas(datas.concat(newData));\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n          <Box component=\"div\"className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n            })}>\r\n            <AppBar\r\n            position=\"static\"\r\n            \r\n            >\r\n                <Toolbar id=\"back-to-top-anchor\">\r\n\r\n                  <Box component=\"div\" className={clsx(classes.menuButton, open && classes.hide)}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                  </Box>\r\n\r\n                  <Box component=\"div\" className={classes.title} >\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        머신 러닝 데이터 분석 관리\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box component=\"div\" className={classes.search}>\r\n                    <div>\r\n                      <div className={classes.searchIcon}>\r\n                        <SearchIcon/>\r\n                      </div>\r\n                      <InputBase\r\n                          placeholder=\"검색하기\"\r\n                          classes={{\r\n                              root: classes.inputRoot,\r\n                              input: classes.inputInput,\r\n                          }}\r\n                          name=\"searchKeyword\"\r\n                          value={searchKeyword.name}\r\n                          onChange={handleSearchKeywordNameChange}\r\n                          inputProps={{ 'aria-label': 'search' }}\r\n                      />\r\n                    </div>\r\n                  </Box>\r\n\r\n                  <Box component=\"div\">\r\n                    <ThemeProvider theme={theme_preventerror}>\r\n                      <DetailSearch onChangeSearchKeyword={onChangeSearchKeyword}></DetailSearch>\r\n                    </ThemeProvider>\r\n                  </Box>\r\n                  \r\n                  <Box component=\"div\">\r\n                    <ThemeProvider theme={theme_preventerror}>\r\n                      <CreateData onCreateData={onCreateData}data={datas}></CreateData>\r\n                    </ThemeProvider>\r\n                  </Box>\r\n\r\n                  <Box component=\"div\" className={classes.marginleft}>\r\n                    <Button variant=\"contained\" onClick={handleSaveFile}>저장</Button>\r\n                  </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n          </Box>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                    <List>\r\n                        <ListItemText primary=\"보기\" className={classes.drawerMenu}/>\r\n                        <List>\r\n                            {['전체보기', '데이터 확인', '휴지통'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemText primary={text} className={classes.drawerSubMenu} onClick={(event) => onChangeType(event, index)}/>\r\n                            </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </List>\r\n                <Divider />\r\n            </Drawer>\r\n\r\n            <Box\r\n              conponent=\"div\"\r\n                className={clsx(classes.content, {\r\n                [classes.contentShift]: open,\r\n            })}>\r\n                <div className={classes.drawerHeader} />\r\n                <ModelDatas\r\n                    datas={filteredComponents(datas)}\r\n                    searchKeyword={searchKeyword}\r\n                    onChangeData={onChangeData}\r\n                    onChangeSortType={onChangeSort}>\r\n                </ModelDatas>\r\n            </Box >\r\n\r\n            <ThemeProvider theme={theme_preventerror}>\r\n              <ScrollTop {...props}>\r\n                <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n                  <KeyboardArrowUpIcon />\r\n                </Fab>\r\n              </ScrollTop>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}