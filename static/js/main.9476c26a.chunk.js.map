{"version":3,"sources":["components/DeleteData.js","components/ModelData.js","components/ModelDatas.js","components/DetailSearch.js","App.js","reportWebVitals.js","index.js"],"names":["DeleteData","props","useState","open","setOpen","data","handleClose","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","Typography","gutterBottom","DialogActions","e","preventDefault","onChangeData","id","theme","unstable_createMuiStrictModeTheme","ModelData","button","isDeleted","ThemeProvider","TableRow","TableCell","name","type","loss_type","loss","accuracy","language","date_create","date_modify","model_json","tf","then","model","predict","print","useStyles","makeStyles","root","margin","spacing","paper","marginLeft","marginRight","table","minwidth","tableHead","fontSize","ModelDatas","dataType","setDataType","sortType","setSortType","changeSortType","event","onChangeSortType","ChangeData","classes","lists","i","datas","push","className","Paper","Table","TableHead","TableBody","input","width","langs","modelTypes","DetailSearch","setName","setLossType","setDateCreate","setDateModify","lang","setLang","modelType","setModelType","TextField","label","onChange","target","value","select","map","option","MenuItem","onChangeSearchKeyword","drawerWidth","theme_preventerror","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","display","title","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","inputInput","paddingLeft","drawerMenu","drawerSubMenu","marginleft","App","useTheme","searchKeyword","setSearchKeyword","arrayDatas","setDatas","menu_type","setMenuType","searchType","setSearchType","currentTime","now","Date","year","String","getFullYear","month","getMonth","length","getDate","AppBar","clsx","Toolbar","IconButton","aria-label","edge","noWrap","InputBase","placeholder","inputProps","newDatas","Array","from","_","orderBy","fileData","JSON","stringify","blob","Blob","url","URL","createObjectURL","link","document","createElement","download","href","click","Drawer","anchor","direction","Divider","List","ListItemText","primary","text","index","ListItem","onChangeType","filter","c","indexOf","deleted_date","NaN","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9476c26a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst DeleteData = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data] = useState(props.data);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const deleteData = (e) => {\r\n        e.preventDefault();\r\n        props.onChangeData(data.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>삭제</Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle onClose={handleClose}>삭제 경고</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography gutterBottom>선택한 데이터가 삭제됩니다.</Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={deleteData}>삭제</Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteData;","import React, { useState } from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteData from \"./DeleteData\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { unstable_createMuiStrictModeTheme } from \"@material-ui/core/styles\";\r\n\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n\r\nconst theme = unstable_createMuiStrictModeTheme();\r\n\r\nconst ModelData = (props) => {\r\n    const [data] = useState(props.data);\r\n\r\n    const deleteData = (id) => {\r\n        props.onChangeData(id)\r\n    }\r\n\r\n    const restoreData = (e) => {\r\n        e.preventDefault();\r\n        props.onChangeData(data.id)\r\n    }\r\n\r\n    const openData = () => {\r\n        if (data.language === \"파이썬\"){\r\n            if(data.model_json !== \"\") {\r\n                tf.loadLayersModel(\"https://raw.githubusercontent.com/eanby00/react-machine-learning/master/main/src/components/model_data/model.json\").then(function(model){\r\n                    model.predict(tf.tensor([0.00632,18.0,2.31,0,0.538,6.575,65.2,4.09,1,296,15.3,396.9,4.98], [1,13])).print();\r\n                })\r\n            }\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    var button = null;\r\n    if (data.isDeleted === false){\r\n        button = <ThemeProvider theme={theme}>\r\n                    <DeleteData data={data} onChangeData={deleteData}/>\r\n                    </ThemeProvider>;\r\n    } else {\r\n        button = <Button variant=\"contained\" color=\"secondary\" onClick={restoreData}>복원</Button>;\r\n    }\r\n\r\n    return(\r\n        <TableRow>\r\n            <TableCell>{data.name}</TableCell>\r\n            <TableCell>{data.type}</TableCell>\r\n            <TableCell>{data.loss_type}</TableCell>\r\n            <TableCell>{data.loss}</TableCell>\r\n            <TableCell>{data.accuracy}</TableCell>\r\n            <TableCell>{data.language}</TableCell>\r\n            <TableCell>{data.date_create}</TableCell>\r\n            <TableCell>{data.date_modify}</TableCell>\r\n            <TableCell><Button variant=\"contained\" color=\"primary\" onClick={openData}>확인</Button></TableCell>\r\n            <TableCell>\r\n                {button}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default ModelData;","import React, {useState} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ModelData from \"./ModelData\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    paper: {\r\n      marginLeft: 18,\r\n      marginRight: 18\r\n    },\r\n    table: {\r\n      minwidth: 1080\r\n    },\r\n    tableHead: {\r\n      fontSize: \"1.0rem\"\r\n    }\r\n}));\r\n\r\nconst ModelDatas = (props) => {\r\n\r\n    const [dataType, setDataType] = useState(\"id\");\r\n    const [sortType, setSortType] = useState(true);\r\n\r\n    const changeSortType = (event, type) => {\r\n        event.preventDefault();\r\n        if (dataType === type) {\r\n            setSortType(!sortType);\r\n        } else {\r\n            setDataType(type);\r\n            setSortType(true);\r\n        }\r\n        props.onChangeSortType(dataType, sortType);\r\n    }\r\n\r\n    const ChangeData = (e) => {\r\n        props.onChangeData(e);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    var lists = [];\r\n    for (var i in props.datas){\r\n      lists.push(<ModelData key={props.datas[i].id} data={props.datas[i]} onChangeData={ChangeData}></ModelData>)\r\n    }\r\n    \r\n    return(\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n              <Table className={classes.table}>\r\n                <TableHead className={classes.TableHead}>\r\n                  <TableRow>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"name\")}>이름</Button></TableCell>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"type\")}>회귀/분류</Button></TableCell>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"loss_type\")}>loss 종류</Button></TableCell>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"loss\")}>loss</Button></TableCell>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"accuracy\")}>정확도</Button></TableCell>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"language\")}>언어 종류</Button></TableCell>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"date_create\")}>생성 날짜</Button></TableCell>\r\n                    <TableCell><Button onClick={(event) => changeSortType(event, \"date_modify\")}>수정 날짜</Button></TableCell>\r\n                    <TableCell>확인</TableCell>\r\n                    <TableCell>삭제</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {lists}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default ModelDatas;","import React, {useState} from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginLeft: 10\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n    }\r\n}))\r\n\r\nconst langs = [\"\", \"파이썬\", \"자바스크립트\"];\r\nconst modelTypes = [\"\", \"회귀\", \"분류\"];\r\n\r\nconst DetailSearch = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [loss_type, setLossType] = useState(\"\");\r\n    const [date_create, setDateCreate] = useState(\"\");\r\n    const [date_modify, setDateModify] = useState(\"\");\r\n    const [lang, setLang] = useState(\"\");\r\n    const [modelType, setModelType] = useState(\"\");\r\n    const classes = useStyles();\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    } \r\n\r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    const handleLossType = (event) => {\r\n        setLossType(event.target.value);\r\n    }\r\n\r\n    const handleDateCreate = (event) => {\r\n        setDateCreate(event.target.value);\r\n    }\r\n\r\n    const handleDateModify = (event) => {\r\n        setDateModify(event.target.value);\r\n    }\r\n\r\n    const handleLangChange = (event) => {\r\n        setLang(event.target.value);\r\n    }\r\n\r\n    const handleModelTypeChange = (event) => {\r\n        setModelType(event.target.value);\r\n    }\r\n\r\n    const onSendSearchKeyword = (event) => {\r\n        setOpen(false);\r\n        // console.log({name: name, modelType, loss_type, lang, date_create, date_modify});\r\n        props.onChangeSearchKeyword({name: name, type: modelType, loss_type: loss_type, language: lang, date_create: date_create, date_modify: date_modify});\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <Button variant=\"contained\" onClick={handleClickOpen}>상세 검색</Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle onClose={handleClose}>상세 검색</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField className={classes.input} id=\"name\" label=\"이름\" variant=\"outlined\" onChange={handleName}/>\r\n                    <TextField\r\n                        className={classes.input}\r\n                        id=\"type\"\r\n                        select\r\n                        label=\"회귀/분류\"\r\n                        value={modelType}\r\n                        onChange={handleModelTypeChange}\r\n                        variant=\"outlined\"\r\n                        >\r\n                        {modelTypes.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField className={classes.input} id=\"loss_type\" label=\"Loss 종류\" variant=\"outlined\" onChange={handleLossType}/>\r\n                    <TextField\r\n                        className={classes.input}\r\n                        id=\"language\"\r\n                        select\r\n                        label=\"언어 종류\"\r\n                        value={lang}\r\n                        onChange={handleLangChange}\r\n                        variant=\"outlined\"\r\n                        >\r\n                        {langs.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField className={classes.input} id=\"date_create\" label=\"생성 날짜\" variant=\"outlined\" onChange={handleDateCreate}/>\r\n                    <TextField className={classes.input} id=\"date_modify\" label=\"수정 날짜\" variant=\"outlined\" onChange={handleDateModify}/>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSendSearchKeyword}>검색</Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailSearch;","import React, { useState } from \"react\";\r\nimport './App.css';\r\nimport ModelDatas from \"./components/ModelDatas\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade} from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport _ from \"lodash\";\r\nimport DetailSearch from \"./components/DetailSearch\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { unstable_createMuiStrictModeTheme } from \"@material-ui/core/styles\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport arrayDatas from \"./mainData.json\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme_preventerror = unstable_createMuiStrictModeTheme();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n      },\r\n      appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n      },\r\n      appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n      hide: {\r\n        display: 'none',\r\n      },\r\n      title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'block',\r\n        },\r\n      },\r\n      search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(1),\r\n          width: 'auto',\r\n        },\r\n      },\r\n      searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      inputRoot: {\r\n        color: 'inherit',\r\n      },\r\n      drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      drawerPaper: {\r\n        width: drawerWidth,\r\n      },\r\n      drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n      },\r\n      contentShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n    \r\n      inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: '12ch',\r\n          '&:focus': {\r\n            width: '20ch',\r\n          },\r\n        },\r\n      },\r\n    \r\n      drawerMenu: {\r\n        marginLeft: 20\r\n      },\r\n    \r\n      drawerSubMenu: {\r\n        marginLeft: 50\r\n      },\r\n\r\n      marginleft: {\r\n        marginLeft: 10\r\n      }\r\n}));\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    \r\n    const [searchKeyword, setSearchKeyword] = useState({\r\n      name: \"\",\r\n      type: \"\",\r\n      loss_type: \"\",\r\n      language: \"\",\r\n      date_create: \"\",\r\n      date_modify: \"\"\r\n    });\r\n    const [datas, setDatas] = useState(arrayDatas);\r\n\r\n    const [menu_type, setMenuType] = useState(\"data\");\r\n    const [open, setOpen] = useState(false);\r\n    const [searchType, setSearchType] = useState(\"name\");\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    }\r\n    \r\n    const handleSearchKeywordNameChange = (e) => {\r\n        setSearchKeyword({name: e.target.value, type: \"\", loss_type: \"\", language: \"\", date_create: \"\", date_modify: \"\"});\r\n        setSearchType(\"name\");\r\n    }\r\n\r\n    const onChangeSearchKeyword = (e) => {\r\n      setSearchKeyword(e);\r\n      setSearchType(\"all\");\r\n    }\r\n    \r\n    const currentTime = () => {\r\n        let now = new Date();\r\n        let year = String(now.getFullYear());\r\n        let month = String(now.getMonth() + 1);\r\n        if (month.length === 1) {\r\n          month = \"0\"+month;\r\n        }\r\n        let date = String(now.getDate());\r\n        return year+month+date;\r\n    }\r\n\r\n    const onChangeData = (e) => {\r\n        let newDatas = Array.from(datas);\r\n        for (let i in datas){\r\n            if (newDatas[i].id === e){\r\n                if (newDatas[i].isDeleted === false) {\r\n                newDatas[i].isDeleted = true;\r\n                newDatas[i].deleted_date = currentTime();\r\n                } else {\r\n                newDatas[i].isDeleted = false;\r\n                newDatas[i].deleted_date = NaN;\r\n                }\r\n                setDatas(newDatas);\r\n            }\r\n        }\r\n    }\r\n\r\n    const filteredComponents = (data) => {\r\n        if( menu_type === \"data\"){\r\n            data = data.filter((c) => {\r\n            return c.isDeleted === false;\r\n            })\r\n        } else if (menu_type === \"removed\"){\r\n            data = data.filter((c) => {\r\n            return c.isDeleted === true;\r\n            })\r\n        }\r\n        if (searchType === \"name\") {\r\n          data = data.filter((c) => {\r\n            return c.name.indexOf(searchKeyword.name) > -1;\r\n          })\r\n        }\r\n        else {\r\n          data = data.filter((c) => {\r\n            return c.name.indexOf(searchKeyword.name) > -1;\r\n          })\r\n          data = data.filter((c) => {\r\n              return c.type.indexOf(searchKeyword.type) > -1;\r\n          })\r\n          data = data.filter((c) => {\r\n              return c.loss_type.indexOf(searchKeyword.loss_type) > -1;\r\n          })\r\n          data = data.filter((c) => {\r\n              return c.language.indexOf(searchKeyword.language) > -1;\r\n          })  \r\n          data = data.filter((c) => {\r\n              return c.date_create.indexOf(searchKeyword.date_create) > -1;\r\n          })\r\n          data = data.filter((c) => {\r\n              return c.date_modify.indexOf(searchKeyword.date_modify) > -1;\r\n          })\r\n        }\r\n        \r\n        return data;\r\n    }\r\n\r\n    const onChangeType = (e, index) => {\r\n        let menu_type_list = [\"all\", \"data\", \"removed\"];\r\n        setMenuType(menu_type_list[index]);\r\n    }\r\n\r\n    const onChangeSort = (dataType, sortType) => {\r\n      let newDatas = Array.from(datas);\r\n      if (sortType){\r\n        newDatas = _.orderBy(newDatas, [dataType], [\"asc\"])\r\n      } else {\r\n        newDatas = _.orderBy(newDatas, [dataType], [\"desc\"])\r\n      }\r\n      setDatas(newDatas);\r\n    }\r\n\r\n    const handleSaveFile = () => {\r\n      let newDatas = Array.from(datas);\r\n      newDatas = _.orderBy(newDatas, [\"id\"], [\"asc\"]);\r\n      const fileData = JSON.stringify(newDatas);\r\n      const blob = new Blob([fileData], {type: \"text/plain\"});\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.download = 'mainData.json';\r\n      link.href = url;\r\n      link.click();\r\n\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n            })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        머신 러닝 데이터 분석 관리\r\n                    </Typography>\r\n\r\n                    <div className={classes.search}>\r\n                      <div className={classes.searchIcon}>\r\n                        <SearchIcon/>\r\n                      </div>\r\n                      <InputBase\r\n                          placeholder=\"검색하기\"\r\n                          classes={{\r\n                              root: classes.inputRoot,\r\n                              input: classes.inputInput,\r\n                          }}\r\n                          name=\"searchKeyword\"\r\n                          value={searchKeyword.name}\r\n                          onChange={handleSearchKeywordNameChange}\r\n                          inputProps={{ 'aria-label': 'search' }}\r\n                      />\r\n                    </div>\r\n                    <ThemeProvider theme={theme_preventerror}>\r\n                      <DetailSearch onChangeSearchKeyword={onChangeSearchKeyword}></DetailSearch>\r\n                    </ThemeProvider>\r\n                    <Button className={classes.marginleft} variant=\"contained\" onClick={handleSaveFile}>저장</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                    <List>\r\n                        <ListItemText primary=\"보기\" className={classes.drawerMenu}/>\r\n                        <List>\r\n                            {['전체보기', '데이터 확인', '휴지통'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemText primary={text} className={classes.drawerSubMenu} onClick={(event) => onChangeType(event, index)}/>\r\n                            </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </List>\r\n                <Divider />\r\n            </Drawer>\r\n\r\n            <main\r\n                className={clsx(classes.content, {\r\n                [classes.contentShift]: open,\r\n            })}>\r\n                <div className={classes.drawerHeader} />\r\n                <ModelDatas\r\n                    datas={filteredComponents(datas)}\r\n                    searchKeyword={searchKeyword}\r\n                    onChangeData={onChangeData}\r\n                    onChangeSortType={onChangeSort}>\r\n                </ModelDatas>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}